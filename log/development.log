MongoDB logging. Please note that logging negatively impacts performance and should be disabled for high-performance production apps.
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"5ffb40b62bd5dbdc", "key"=>"1e766a10054c14fc52769743350b91b6"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"a6867e054a747feb", "key"=>"1d90dd679ac9f1734c7ecce904407544"})
Starting the New Relic Agent.
NewRelic Agent Developer Mode enabled.
To view performance information, go to http://localhost:3000/newrelic
MongoDB logging. Please note that logging negatively impacts performance and should be disabled for high-performance production apps.
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"82947eb7b029723d", "key"=>"e900137a1e2cf89ea04ac7940738a202"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"7d5e2258d3d7c007", "key"=>"19c02234f78f19c602968ba42955b6e1"})
Starting the New Relic Agent.
NewRelic Agent Developer Mode enabled.
To view performance information, go to http://localhost:3000/newrelic
MongoDB logging. Please note that logging negatively impacts performance and should be disabled for high-performance production apps.
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"a2e8fbc6c351b1df", "key"=>"07f41de2dad4e3d502b15c9c2618dd4a"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"b0ac15330a2378dc", "key"=>"03098611c806a2d701b2a67ca69ec68b"})
Starting the New Relic Agent.
NewRelic Agent Developer Mode enabled.
To view performance information, go to http://localhost:3000/newrelic
MongoDB logging. Please note that logging negatively impacts performance and should be disabled for high-performance production apps.
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"72f0eaf93e79972b", "key"=>"3754846ec213aac5b128b4a7a9a409b8"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"83791a333825993f", "key"=>"4e324b7b33e653bd38d857defdd5548e"})
Starting the New Relic Agent.
NewRelic Agent Developer Mode enabled.
To view performance information, go to http://localhost:3000/newrelic


Started GET "/" for 127.0.0.1 at 2012-10-06 13:48:40 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
  Rendered networks/index.html.erb within layouts/application (425.4ms)
Completed 200 OK in 531ms (Views: 530.2ms)


Started GET "/grou%C3%BCs" for 127.0.0.1 at 2012-10-06 13:48:45 -0700

ActionController::RoutingError (No route matches [GET] "/grou%C3%BCs"):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/routing_error.erb within rescues/layout (0.5ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-06 13:48:49 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e6244b982541d8b000023')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('502e6244b982541d8b000023')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50325318b98254a648000016')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('503e5954b982543b2f00000d')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (5419.4ms)
Completed 200 OK in 5436ms (Views: 5435.1ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 13:49:12 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50539c9eb982543c04000006'), BSON::ObjectId('50539c9fb982543c04000007'), BSON::ObjectId('50539c9fb982543c04000008'), BSON::ObjectId('50539c9fb982543c04000009'), BSON::ObjectId('50539c9fb982543c0400000a'), BSON::ObjectId('50539c9fb982543c0400000b'), BSON::ObjectId('50539c9fb982543c0400000c'), BSON::ObjectId('50539c9fb982543c0400000d'), BSON::ObjectId('50539c9fb982543c0400000e'), BSON::ObjectId('50539c9fb982543c0400000f'), BSON::ObjectId('50539c9fb982543c04000010'), BSON::ObjectId('50539c9fb982543c04000011'), BSON::ObjectId('50539c9fb982543c04000012'), BSON::ObjectId('50539c9fb982543c04000013'), BSON::ObjectId('50539c9fb982543c04000014'), BSON::ObjectId('50539c9fb982543c04000015'), BSON::ObjectId('50539c9fb982543c04000016'), BSON::ObjectId('50539c9fb982543c04000017'), BSON::ObjectId('50539c9fb982543c04000018'), BSON::ObjectId('50539c9fb982543c04000019'), BSON::ObjectId('50539c9fb982543c0400001a'), BSON::ObjectId('50539c9fb982543c0400001b'), BSON::ObjectId('50539c9fb982543c0400001c'), BSON::ObjectId('50539c9fb982543c0400001d'), BSON::ObjectId('50539c9fb982543c0400001e'), BSON::ObjectId('50539c9fb982543c0400001f'), BSON::ObjectId('50539c9fb982543c04000020'), BSON::ObjectId('5053a367b9825442b5000320'), BSON::ObjectId('5053a367b9825442b5000321'), BSON::ObjectId('5053a367b9825442b5000322'), BSON::ObjectId('5053a367b9825442b5000323'), BSON::ObjectId('5053a367b9825442b5000324'), BSON::ObjectId('5053a367b9825442b5000325'), BSON::ObjectId('5053a367b9825442b5000326'), BSON::ObjectId('5053a367b9825442b5000327'), BSON::ObjectId('5053a367b9825442b5000328'), BSON::ObjectId('5053a367b9825442b5000329'), BSON::ObjectId('5053a367b9825442b500032a'), BSON::ObjectId('5053a367b9825442b500032b'), BSON::ObjectId('5053a367b9825442b500032c'), BSON::ObjectId('5053a367b9825442b500032d'), BSON::ObjectId('5053a367b9825442b500032e'), BSON::ObjectId('5053a367b9825442b500032f'), BSON::ObjectId('5053a367b9825442b5000330'), BSON::ObjectId('5053a367b9825442b5000331'), BSON::ObjectId('5053a367b9825442b5000332'), BSON::ObjectId('5053a367b9825442b5000333'), BSON::ObjectId('5053a367b9825442b5000334'), BSON::ObjectId('5053a367b9825442b5000335'), BSON::ObjectId('5053a367b9825442b5000336'), BSON::ObjectId('5053a367b9825442b5000337'), BSON::ObjectId('5053a367b9825442b5000338'), BSON::ObjectId('5053a367b9825442b5000339'), BSON::ObjectId('5053a367b9825442b500033a'), BSON::ObjectId('5067781cb982543d7e000369'), BSON::ObjectId('5067781db982543d7e00036a'), BSON::ObjectId('5067781db982543d7e00036b'), BSON::ObjectId('5067781db982543d7e00036c'), BSON::ObjectId('5067781db982543d7e00036d'), BSON::ObjectId('5067781db982543d7e00036e'), BSON::ObjectId('5067781eb982543d7e00036f'), BSON::ObjectId('5067781eb982543d7e000370'), BSON::ObjectId('5067781eb982543d7e000371'), BSON::ObjectId('5067781eb982543d7e000372'), BSON::ObjectId('5067781fb982543d7e000373'), BSON::ObjectId('5067781fb982543d7e000374'), BSON::ObjectId('5067781fb982543d7e000375'), BSON::ObjectId('5067781fb982543d7e000376'), BSON::ObjectId('5067781fb982543d7e000377'), BSON::ObjectId('50677820b982543d7e000378'), BSON::ObjectId('50677820b982543d7e000379'), BSON::ObjectId('50677820b982543d7e00037a'), BSON::ObjectId('50677820b982543d7e00037b'), BSON::ObjectId('50677820b982543d7e00037c'), BSON::ObjectId('50677821b982543d7e00037d'), BSON::ObjectId('50677821b982543d7e00037e'), BSON::ObjectId('50677821b982543d7e00037f'), BSON::ObjectId('50677821b982543d7e000380'), BSON::ObjectId('50677821b982543d7e000381'), BSON::ObjectId('50677822b982543d7e000382'), BSON::ObjectId('50677822b982543d7e000383'), BSON::ObjectId('506ca8c4b982540333000002'), BSON::ObjectId('506ca8c5b982540333000003'), BSON::ObjectId('506ca8c5b982540333000004'), BSON::ObjectId('506ca8c5b982540333000005'), BSON::ObjectId('506ca8c5b982540333000006'), BSON::ObjectId('506ca8c5b982540333000007'), BSON::ObjectId('506ca8c6b982540333000008'), BSON::ObjectId('506ca8c6b982540333000009'), BSON::ObjectId('506ca8c6b98254033300000a'), BSON::ObjectId('506ca8c6b98254033300000b'), BSON::ObjectId('506ca8c6b98254033300000c'), BSON::ObjectId('506ca8c7b98254033300000d'), BSON::ObjectId('506ca8c7b98254033300000e'), BSON::ObjectId('506ca8c7b98254033300000f'), BSON::ObjectId('506ca8c7b982540333000010'), BSON::ObjectId('506ca8c7b982540333000011'), BSON::ObjectId('506ca8c8b982540333000012'), BSON::ObjectId('506ca8c8b982540333000013'), BSON::ObjectId('506ca8c8b982540333000014'), BSON::ObjectId('506ca8c8b982540333000015'), BSON::ObjectId('506ca8c8b982540333000016'), BSON::ObjectId('506ca8c9b982540333000017'), BSON::ObjectId('506ca8c9b982540333000018'), BSON::ObjectId('506ca8c9b982540333000019'), BSON::ObjectId('506ca8c9b98254033300001a'), BSON::ObjectId('506ca8c9b98254033300001b'), BSON::ObjectId('506ca8cab98254033300001c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50539c9eb982543c04000006'), BSON::ObjectId('50539c9fb982543c04000007'), BSON::ObjectId('50539c9fb982543c04000008'), BSON::ObjectId('50539c9fb982543c04000009'), BSON::ObjectId('50539c9fb982543c0400000a'), BSON::ObjectId('50539c9fb982543c0400000b'), BSON::ObjectId('50539c9fb982543c0400000c'), BSON::ObjectId('50539c9fb982543c0400000d'), BSON::ObjectId('50539c9fb982543c0400000e'), BSON::ObjectId('50539c9fb982543c0400000f'), BSON::ObjectId('50539c9fb982543c04000010'), BSON::ObjectId('50539c9fb982543c04000011'), BSON::ObjectId('50539c9fb982543c04000012'), BSON::ObjectId('50539c9fb982543c04000013'), BSON::ObjectId('50539c9fb982543c04000014'), BSON::ObjectId('50539c9fb982543c04000015'), BSON::ObjectId('50539c9fb982543c04000016'), BSON::ObjectId('50539c9fb982543c04000017'), BSON::ObjectId('50539c9fb982543c04000018'), BSON::ObjectId('50539c9fb982543c04000019'), BSON::ObjectId('50539c9fb982543c0400001a'), BSON::ObjectId('50539c9fb982543c0400001b'), BSON::ObjectId('50539c9fb982543c0400001c'), BSON::ObjectId('50539c9fb982543c0400001d'), BSON::ObjectId('50539c9fb982543c0400001e'), BSON::ObjectId('50539c9fb982543c0400001f'), BSON::ObjectId('50539c9fb982543c04000020'), BSON::ObjectId('5053a367b9825442b5000320'), BSON::ObjectId('5053a367b9825442b5000321'), BSON::ObjectId('5053a367b9825442b5000322'), BSON::ObjectId('5053a367b9825442b5000323'), BSON::ObjectId('5053a367b9825442b5000324'), BSON::ObjectId('5053a367b9825442b5000325'), BSON::ObjectId('5053a367b9825442b5000326'), BSON::ObjectId('5053a367b9825442b5000327'), BSON::ObjectId('5053a367b9825442b5000328'), BSON::ObjectId('5053a367b9825442b5000329'), BSON::ObjectId('5053a367b9825442b500032a'), BSON::ObjectId('5053a367b9825442b500032b'), BSON::ObjectId('5053a367b9825442b500032c'), BSON::ObjectId('5053a367b9825442b500032d'), BSON::ObjectId('5053a367b9825442b500032e'), BSON::ObjectId('5053a367b9825442b500032f'), BSON::ObjectId('5053a367b9825442b5000330'), BSON::ObjectId('5053a367b9825442b5000331'), BSON::ObjectId('5053a367b9825442b5000332'), BSON::ObjectId('5053a367b9825442b5000333'), BSON::ObjectId('5053a367b9825442b5000334'), BSON::ObjectId('5053a367b9825442b5000335'), BSON::ObjectId('5053a367b9825442b5000336'), BSON::ObjectId('5053a367b9825442b5000337'), BSON::ObjectId('5053a367b9825442b5000338'), BSON::ObjectId('5053a367b9825442b5000339'), BSON::ObjectId('5053a367b9825442b500033a'), BSON::ObjectId('5067781cb982543d7e000369'), BSON::ObjectId('5067781db982543d7e00036a'), BSON::ObjectId('5067781db982543d7e00036b'), BSON::ObjectId('5067781db982543d7e00036c'), BSON::ObjectId('5067781db982543d7e00036d'), BSON::ObjectId('5067781db982543d7e00036e'), BSON::ObjectId('5067781eb982543d7e00036f'), BSON::ObjectId('5067781eb982543d7e000370'), BSON::ObjectId('5067781eb982543d7e000371'), BSON::ObjectId('5067781eb982543d7e000372'), BSON::ObjectId('5067781fb982543d7e000373'), BSON::ObjectId('5067781fb982543d7e000374'), BSON::ObjectId('5067781fb982543d7e000375'), BSON::ObjectId('5067781fb982543d7e000376'), BSON::ObjectId('5067781fb982543d7e000377'), BSON::ObjectId('50677820b982543d7e000378'), BSON::ObjectId('50677820b982543d7e000379'), BSON::ObjectId('50677820b982543d7e00037a'), BSON::ObjectId('50677820b982543d7e00037b'), BSON::ObjectId('50677820b982543d7e00037c'), BSON::ObjectId('50677821b982543d7e00037d'), BSON::ObjectId('50677821b982543d7e00037e'), BSON::ObjectId('50677821b982543d7e00037f'), BSON::ObjectId('50677821b982543d7e000380'), BSON::ObjectId('50677821b982543d7e000381'), BSON::ObjectId('50677822b982543d7e000382'), BSON::ObjectId('50677822b982543d7e000383'), BSON::ObjectId('506ca8c4b982540333000002'), BSON::ObjectId('506ca8c5b982540333000003'), BSON::ObjectId('506ca8c5b982540333000004'), BSON::ObjectId('506ca8c5b982540333000005'), BSON::ObjectId('506ca8c5b982540333000006'), BSON::ObjectId('506ca8c5b982540333000007'), BSON::ObjectId('506ca8c6b982540333000008'), BSON::ObjectId('506ca8c6b982540333000009'), BSON::ObjectId('506ca8c6b98254033300000a'), BSON::ObjectId('506ca8c6b98254033300000b'), BSON::ObjectId('506ca8c6b98254033300000c'), BSON::ObjectId('506ca8c7b98254033300000d'), BSON::ObjectId('506ca8c7b98254033300000e'), BSON::ObjectId('506ca8c7b98254033300000f'), BSON::ObjectId('506ca8c7b982540333000010'), BSON::ObjectId('506ca8c7b982540333000011'), BSON::ObjectId('506ca8c8b982540333000012'), BSON::ObjectId('506ca8c8b982540333000013'), BSON::ObjectId('506ca8c8b982540333000014'), BSON::ObjectId('506ca8c8b982540333000015'), BSON::ObjectId('506ca8c8b982540333000016'), BSON::ObjectId('506ca8c9b982540333000017'), BSON::ObjectId('506ca8c9b982540333000018'), BSON::ObjectId('506ca8c9b982540333000019'), BSON::ObjectId('506ca8c9b98254033300001a'), BSON::ObjectId('506ca8c9b98254033300001b'), BSON::ObjectId('506ca8cab98254033300001c')]}})
  Rendered groups/show.html.erb within layouts/application (1119.9ms)
Completed 200 OK in 1334ms (Views: 1133.4ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:49:19 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (3348.3ms)
Completed 500 Internal Server Error in 3537ms

ActionView::Template::Error (undefined method `facebook_event?' for #<Event:0x007fc24d64d928>):
    10: <% @group.events.each do |event| %>
    11:     <tr>
    12:         <td>
    13:             <%= link_to event.name, event %>
    14:         </td>
    15:     </tr>
    16: <% end %>
  app/models/event.rb:9:in `name'
  app/views/groups/show.html.erb:13:in `block in _app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/views/groups/show.html.erb:10:in `_app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/controllers/groups_controller.rb:18:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (21.3ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:49:40 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (6052.7ms)
Completed 500 Internal Server Error in 6444ms

ActionView::Template::Error (undefined method `facebook_event?' for #<Event:0x007fc24d3d63e8>):
    10: <% @group.events.each do |event| %>
    11:     <tr>
    12:         <td>
    13:             <%= link_to event.name, event %>
    14:         </td>
    15:     </tr>
    16: <% end %>
  app/models/event.rb:9:in `name'
  app/views/groups/show.html.erb:13:in `block in _app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/views/groups/show.html.erb:10:in `_app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/controllers/groups_controller.rb:18:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (18.4ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:49:47 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (4167.2ms)
Completed 500 Internal Server Error in 4684ms

ActionView::Template::Error (undefined method `facebook_event?' for #<Event:0x007fc24d7a6810>):
    10: <% @group.events.each do |event| %>
    11:     <tr>
    12:         <td>
    13:             <%= link_to event.name, event %>
    14:         </td>
    15:     </tr>
    16: <% end %>
  app/models/event.rb:9:in `name'
  app/views/groups/show.html.erb:13:in `block in _app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/views/groups/show.html.erb:10:in `_app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/controllers/groups_controller.rb:18:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (44.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (58.2ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:50:40 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (5836.2ms)
Completed 500 Internal Server Error in 7738ms

ActionView::Template::Error (undefined method `has_facebook_event?' for #<Event:0x007fc24d509490>):
    10: <% @group.events.each do |event| %>
    11:     <tr>
    12:         <td>
    13:             <%= link_to event.name, event %>
    14:         </td>
    15:     </tr>
    16: <% end %>
  app/models/event.rb:9:in `name'
  app/views/groups/show.html.erb:13:in `block in _app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/views/groups/show.html.erb:10:in `_app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/controllers/groups_controller.rb:18:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (18.3ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:52:27 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (8134.6ms)
Completed 500 Internal Server Error in 8665ms

ActionView::Template::Error (undefined method `has_facebook_event?' for #<Event:0x007fc24f880b08>):
    10: <% @group.events.each do |event| %>
    11:     <tr>
    12:         <td>
    13:             <%= link_to event.name, event %>
    14:         </td>
    15:     </tr>
    16: <% end %>
  app/models/event.rb:9:in `name'
  app/views/groups/show.html.erb:13:in `block in _app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/views/groups/show.html.erb:10:in `_app_views_groups_show_html_erb___2690420205447612061_70236242453800'
  app/controllers/groups_controller.rb:18:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (18.3ms)


Started GET "/groups/50318257b982542f54000005" for 127.0.0.1 at 2012-10-06 13:53:11 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('5053a21ab9825442b50002bf'), BSON::ObjectId('5053a21ab9825442b50002c0'), BSON::ObjectId('5053a21ab9825442b50002c1'), BSON::ObjectId('5053a21ab9825442b50002c2'), BSON::ObjectId('5053a221b9825442b50002c3'), BSON::ObjectId('5053a221b9825442b50002c4'), BSON::ObjectId('5053a221b9825442b50002c5'), BSON::ObjectId('5053a221b9825442b50002c6'), BSON::ObjectId('5053a221b9825442b50002c7'), BSON::ObjectId('5053a221b9825442b50002c8'), BSON::ObjectId('5053a221b9825442b50002c9'), BSON::ObjectId('5053a221b9825442b50002ca'), BSON::ObjectId('5053a221b9825442b50002cb'), BSON::ObjectId('5053a221b9825442b50002cc'), BSON::ObjectId('5053a221b9825442b50002cd'), BSON::ObjectId('5053a221b9825442b50002ce'), BSON::ObjectId('5053a221b9825442b50002cf'), BSON::ObjectId('5053a221b9825442b50002d0'), BSON::ObjectId('5053a221b9825442b50002d1'), BSON::ObjectId('5053a221b9825442b50002d2'), BSON::ObjectId('5053a221b9825442b50002d3'), BSON::ObjectId('5053a221b9825442b50002d4'), BSON::ObjectId('5053a221b9825442b50002d5'), BSON::ObjectId('5053a221b9825442b50002d6'), BSON::ObjectId('5053a221b9825442b50002d7'), BSON::ObjectId('5053a221b9825442b50002d8'), BSON::ObjectId('5053a221b9825442b50002d9'), BSON::ObjectId('5053a221b9825442b50002da'), BSON::ObjectId('5053a221b9825442b50002db'), BSON::ObjectId('5053a221b9825442b50002dc'), BSON::ObjectId('5053a221b9825442b50002dd'), BSON::ObjectId('5053a221b9825442b50002de'), BSON::ObjectId('5053a221b9825442b50002df'), BSON::ObjectId('5053a221b9825442b50002e0'), BSON::ObjectId('5053a221b9825442b50002e1'), BSON::ObjectId('5053a221b9825442b50002e2'), BSON::ObjectId('5053a221b9825442b50002e3'), BSON::ObjectId('5053a221b9825442b50002e4'), BSON::ObjectId('5053a221b9825442b50002e5'), BSON::ObjectId('5053a221b9825442b50002e6'), BSON::ObjectId('5053a221b9825442b50002e7'), BSON::ObjectId('5053a221b9825442b50002e8'), BSON::ObjectId('5053a221b9825442b50002e9'), BSON::ObjectId('5053a221b9825442b50002ea'), BSON::ObjectId('5053a221b9825442b50002eb'), BSON::ObjectId('5053a221b9825442b50002ec'), BSON::ObjectId('5053a221b9825442b50002ed'), BSON::ObjectId('5053a221b9825442b50002ee'), BSON::ObjectId('5053a221b9825442b50002ef'), BSON::ObjectId('5053a221b9825442b50002f0'), BSON::ObjectId('5053a221b9825442b50002f1'), BSON::ObjectId('5053a221b9825442b50002f2'), BSON::ObjectId('5053a221b9825442b50002f3'), BSON::ObjectId('5053a221b9825442b50002f4'), BSON::ObjectId('506777bab982543d7e00031e'), BSON::ObjectId('506777bab982543d7e00031f'), BSON::ObjectId('506777bab982543d7e000320'), BSON::ObjectId('506777bbb982543d7e000321'), BSON::ObjectId('506777bdb982543d7e000322'), BSON::ObjectId('506777beb982543d7e000323'), BSON::ObjectId('506777beb982543d7e000324'), BSON::ObjectId('506777beb982543d7e000325'), BSON::ObjectId('506777beb982543d7e000326'), BSON::ObjectId('506777bfb982543d7e000327'), BSON::ObjectId('506777bfb982543d7e000328'), BSON::ObjectId('506777bfb982543d7e000329'), BSON::ObjectId('506777bfb982543d7e00032a'), BSON::ObjectId('506777bfb982543d7e00032b'), BSON::ObjectId('506777c0b982543d7e00032c'), BSON::ObjectId('506777c0b982543d7e00032d'), BSON::ObjectId('506777c0b982543d7e00032e'), BSON::ObjectId('506777c0b982543d7e00032f'), BSON::ObjectId('506777c0b982543d7e000330'), BSON::ObjectId('506777c1b982543d7e000331'), BSON::ObjectId('506777c1b982543d7e000332'), BSON::ObjectId('506777c1b982543d7e000333'), BSON::ObjectId('506777c1b982543d7e000334'), BSON::ObjectId('506777c1b982543d7e000335'), BSON::ObjectId('506777c2b982543d7e000336'), BSON::ObjectId('506777c2b982543d7e000337'), BSON::ObjectId('506777c2b982543d7e000338'), BSON::ObjectId('506777c2b982543d7e000339'), BSON::ObjectId('506777c3b982543d7e00033a'), BSON::ObjectId('506777c3b982543d7e00033b'), BSON::ObjectId('506777c3b982543d7e00033c'), BSON::ObjectId('506777c3b982543d7e00033d'), BSON::ObjectId('506777c3b982543d7e00033e'), BSON::ObjectId('506777c4b982543d7e00033f'), BSON::ObjectId('506777c4b982543d7e000340'), BSON::ObjectId('506777c4b982543d7e000341'), BSON::ObjectId('506777c4b982543d7e000342'), BSON::ObjectId('506777c4b982543d7e000343'), BSON::ObjectId('506777c5b982543d7e000344'), BSON::ObjectId('506777c5b982543d7e000345'), BSON::ObjectId('506777c5b982543d7e000346'), BSON::ObjectId('506777c5b982543d7e000347'), BSON::ObjectId('506777c5b982543d7e000348'), BSON::ObjectId('506777c6b982543d7e000349'), BSON::ObjectId('506777c6b982543d7e00034a'), BSON::ObjectId('506777c6b982543d7e00034b'), BSON::ObjectId('506777c6b982543d7e00034c'), BSON::ObjectId('506777c6b982543d7e00034d'), BSON::ObjectId('506777c7b982543d7e00034e'), BSON::ObjectId('506777c7b982543d7e00034f'), BSON::ObjectId('506777c7b982543d7e000350'), BSON::ObjectId('506777c7b982543d7e000351'), BSON::ObjectId('506777c7b982543d7e000352'), BSON::ObjectId('506777c8b982543d7e000353'), BSON::ObjectId('506777c8b982543d7e000354'), BSON::ObjectId('506777c8b982543d7e000355'), BSON::ObjectId('506777c8b982543d7e000356'), BSON::ObjectId('506777c9b982543d7e000357'), BSON::ObjectId('506777c9b982543d7e000358'), BSON::ObjectId('506777c9b982543d7e000359'), BSON::ObjectId('506777c9b982543d7e00035a'), BSON::ObjectId('506777c9b982543d7e00035b'), BSON::ObjectId('506777cab982543d7e00035c'), BSON::ObjectId('506777cab982543d7e00035d'), BSON::ObjectId('506777cab982543d7e00035e'), BSON::ObjectId('506777cab982543d7e00035f'), BSON::ObjectId('506777cab982543d7e000360'), BSON::ObjectId('506777cbb982543d7e000361'), BSON::ObjectId('506777cbb982543d7e000362'), BSON::ObjectId('506777cbb982543d7e000363'), BSON::ObjectId('506777cbb982543d7e000364'), BSON::ObjectId('506777ccb982543d7e000365'), BSON::ObjectId('506c98e2b982540d1d000003'), BSON::ObjectId('506c98e3b982540d1d000004'), BSON::ObjectId('506c98e3b982540d1d000005'), BSON::ObjectId('506c98e3b982540d1d000006'), BSON::ObjectId('506c98e3b982540d1d000007'), BSON::ObjectId('506c98e3b982540d1d000008'), BSON::ObjectId('506c98e3b982540d1d000009'), BSON::ObjectId('506c98e4b982540d1d00000a'), BSON::ObjectId('506c98e4b982540d1d00000b'), BSON::ObjectId('506c98e4b982540d1d00000c'), BSON::ObjectId('506c98e4b982540d1d00000d'), BSON::ObjectId('506c98e4b982540d1d00000e'), BSON::ObjectId('506c98e5b982540d1d00000f'), BSON::ObjectId('506c98e5b982540d1d000010'), BSON::ObjectId('506c98e5b982540d1d000011'), BSON::ObjectId('506c98e5b982540d1d000012'), BSON::ObjectId('506c98e5b982540d1d000013'), BSON::ObjectId('506c98e6b982540d1d000014'), BSON::ObjectId('506c98e6b982540d1d000015'), BSON::ObjectId('506c98e6b982540d1d000016'), BSON::ObjectId('506c98e6b982540d1d000017'), BSON::ObjectId('506c98e6b982540d1d000018'), BSON::ObjectId('506c98e6b982540d1d000019'), BSON::ObjectId('506c98e7b982540d1d00001a'), BSON::ObjectId('506c98e7b982540d1d00001b'), BSON::ObjectId('506c98e7b982540d1d00001c'), BSON::ObjectId('506c98e7b982540d1d00001d'), BSON::ObjectId('506c98e7b982540d1d00001e'), BSON::ObjectId('506c98e8b982540d1d00001f'), BSON::ObjectId('506c98e8b982540d1d000020'), BSON::ObjectId('506c98e8b982540d1d000021'), BSON::ObjectId('506c98e8b982540d1d000022'), BSON::ObjectId('506c98e8b982540d1d000023'), BSON::ObjectId('506c98e9b982540d1d000024'), BSON::ObjectId('506c98e9b982540d1d000025'), BSON::ObjectId('506c98e9b982540d1d000026'), BSON::ObjectId('506c98e9b982540d1d000027'), BSON::ObjectId('506c98e9b982540d1d000028'), BSON::ObjectId('506cadadb982540333000053'), BSON::ObjectId('506cadadb982540333000054'), BSON::ObjectId('506cadaeb982540333000055'), BSON::ObjectId('506cadaeb982540333000056'), BSON::ObjectId('506cadaeb982540333000057'), BSON::ObjectId('506cadaeb982540333000058'), BSON::ObjectId('506cadafb982540333000059'), BSON::ObjectId('506cadafb98254033300005a'), BSON::ObjectId('506cadafb98254033300005b'), BSON::ObjectId('506cadb0b98254033300005c'), BSON::ObjectId('506cadb0b98254033300005d'), BSON::ObjectId('506cadb0b98254033300005e'), BSON::ObjectId('506cadb0b98254033300005f'), BSON::ObjectId('506cadb0b982540333000060'), BSON::ObjectId('506cadb1b982540333000061'), BSON::ObjectId('506cadb1b982540333000062'), BSON::ObjectId('506cadb1b982540333000063'), BSON::ObjectId('506cadb1b982540333000064'), BSON::ObjectId('506cadb1b982540333000065'), BSON::ObjectId('506cadb2b982540333000066'), BSON::ObjectId('506cadb2b982540333000067'), BSON::ObjectId('506cadb2b982540333000068'), BSON::ObjectId('506cadb2b982540333000069'), BSON::ObjectId('506cadb2b98254033300006a'), BSON::ObjectId('506cadb2b98254033300006b'), BSON::ObjectId('506cadb3b98254033300006c'), BSON::ObjectId('506cadb3b98254033300006d'), BSON::ObjectId('506cadb3b98254033300006e'), BSON::ObjectId('506cadb3b98254033300006f'), BSON::ObjectId('506cadb3b982540333000070'), BSON::ObjectId('506cadb4b982540333000071'), BSON::ObjectId('506cadb4b982540333000072'), BSON::ObjectId('506cadb4b982540333000073'), BSON::ObjectId('506cadb4b982540333000074'), BSON::ObjectId('506e1912b982540b7c000048')]}})
  Rendered groups/show.html.erb within layouts/application (8147.4ms)
Completed 200 OK in 9264ms (Views: 8176.6ms)


Started GET "/groups/50318257b982542f54000005/update_group" for 127.0.0.1 at 2012-10-06 13:53:28 -0700

ActionController::RoutingError (No route matches [GET] "/groups/50318257b982542f54000005/update_group"):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/routing_error.erb within rescues/layout (0.4ms)


Started GET "/groups/50318257b982542f54000005/update_details" for 127.0.0.1 at 2012-10-06 13:53:44 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"50318257b982542f54000005"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 198ms

NoMethodError (undefined method `token' for nil:NilClass):
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.1ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-06 13:53:55 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e6244b982541d8b000023')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('502e6244b982541d8b000023')}).sort([[:_id, :asc]])
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50325318b98254a648000016')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_pages'].find({"group_id"=>BSON::ObjectId('50318257b982542f54000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('503e5954b982543b2f00000d')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (5891.1ms)
Completed 200 OK in 5942ms (Views: 5941.2ms)


Started GET "/user/auth/facebook" for 127.0.0.1 at 2012-10-06 13:54:03 -0700


Started GET "/user/auth/facebook/callback?state=254a6adeb2150b55f02143e59631db8650ac1a0fc7de7d24&code=AQC5eDTBwoG7y3Bol48Q24JaG7R_mo_ojihRIM_6-p8P-OMs0QN8x5KArv6tsf_VzKedIuTqSKl3Ni-_4z57mpDaLK5Qh-y8QqdfAUi3HIaFm1DSEwyt_UhKiwSl0KVrRLOVc3tRCn-cYp0wl-1O_LGuSL_hV2gs2tV7bbQSivWn8f82D0kO12FL071F9TbHsKmU2s6GkxgiE4Fuyk7jrY3b" for 127.0.0.1 at 2012-10-06 13:54:04 -0700
Processing by Users::OmniauthCallbacksController#facebook as HTML
  Parameters: {"state"=>"254a6adeb2150b55f02143e59631db8650ac1a0fc7de7d24", "code"=>"AQC5eDTBwoG7y3Bol48Q24JaG7R_mo_ojihRIM_6-p8P-OMs0QN8x5KArv6tsf_VzKedIuTqSKl3Ni-_4z57mpDaLK5Qh-y8QqdfAUi3HIaFm1DSEwyt_UhKiwSl0KVrRLOVc3tRCn-cYp0wl-1O_LGuSL_hV2gs2tV7bbQSivWn8f82D0kO12FL071F9TbHsKmU2s6GkxgiE4Fuyk7jrY3b"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:provider=>"facebook", :uid=>"687223675"}).sort([[:_id, :asc]])
MONGODB near_io_dev['users'].update({"_id"=>BSON::ObjectId('5023b1f7b98254fd53000001')}, {"$set"=>{"expires_at"=>2012-12-05 20:54:04 UTC}})
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"facebook_places", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('5023bbc6b98254fe0f000001'), BSON::ObjectId('5023bc4fb98254fe0f000002'), BSON::ObjectId('5023bc4fb98254fe0f000003'), BSON::ObjectId('5023bc4fb98254fe0f000004'), BSON::ObjectId('5023bc4fb98254fe0f000005'), BSON::ObjectId('5023bc4fb98254fe0f000006'), BSON::ObjectId('5023bc4fb98254fe0f000007'), BSON::ObjectId('5023bc50b98254fe0f000008'), BSON::ObjectId('5023bc51b98254fe0f000009'), BSON::ObjectId('5023bc52b98254fe0f00000a'), BSON::ObjectId('5023bc53b98254fe0f00000b'), BSON::ObjectId('5023bc54b98254fe0f00000c'), BSON::ObjectId('5023bc55b98254fe0f00000d'), BSON::ObjectId('5023bc57b98254fe0f00000e'), BSON::ObjectId('5023bc58b98254fe0f00000f'), BSON::ObjectId('5023bc58b98254fe0f000010'), BSON::ObjectId('5023bc58b98254fe0f000011'), BSON::ObjectId('5023bc59b98254fe0f000012'), BSON::ObjectId('5023bc59b98254fe0f000013'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5ab98254fe0f000014'), BSON::ObjectId('5023bc5cb98254fe0f000015'), BSON::ObjectId('5023bc5db98254fe0f000016'), BSON::ObjectId('5023bc5db98254fe0f000017'), BSON::ObjectId('5023bc5eb98254fe0f000018'), BSON::ObjectId('50240c92b98254053b00000c'), BSON::ObjectId('50240c92b98254053b00000d'), BSON::ObjectId('50240c92b98254053b00000e'), BSON::ObjectId('50240c92b98254053b00000f'), BSON::ObjectId('50240c92b98254053b000010'), BSON::ObjectId('50240c92b98254053b000011'), BSON::ObjectId('50240c92b98254053b000012'), BSON::ObjectId('50240c92b98254053b000013'), BSON::ObjectId('50240c92b98254053b000014'), BSON::ObjectId('50240c92b98254053b000015'), BSON::ObjectId('50240c92b98254053b000016'), BSON::ObjectId('502437f8b9825407a8000001'), BSON::ObjectId('502437f8b9825407a8000012'), BSON::ObjectId('502437f9b9825407a800001e'), BSON::ObjectId('502437f9b9825407a800002a'), BSON::ObjectId('502437f9b9825407a8000052'), BSON::ObjectId('502437f9b9825407a8000063'), BSON::ObjectId('502437f9b9825407a8000075'), BSON::ObjectId('502437f9b9825407a800007d'), BSON::ObjectId('502437f9b9825407a8000084'), BSON::ObjectId('502437f9b9825407a800009d'), BSON::ObjectId('502437f9b9825407a80000bb'), BSON::ObjectId('502437f9b9825407a80000d4'), BSON::ObjectId('502437f9b9825407a80000e6'), BSON::ObjectId('502437f9b9825407a8000101'), BSON::ObjectId('502437f9b9825407a8000108'), BSON::ObjectId('502437f9b9825407a8000118'), BSON::ObjectId('502437f9b9825407a8000120'), BSON::ObjectId('502437fab9825407a8000123'), BSON::ObjectId('502437fab9825407a8000131'), BSON::ObjectId('502437fab9825407a800013b'), BSON::ObjectId('502437fab9825407a8000141'), BSON::ObjectId('502437fab9825407a800014c'), BSON::ObjectId('502437fab9825407a8000163'), BSON::ObjectId('502437fab9825407a8000178'), BSON::ObjectId('502437fcb9825407a8000185'), BSON::ObjectId('502437fcb9825407a8000194'), BSON::ObjectId('502437fcb9825407a80001ba'), BSON::ObjectId('502437fcb9825407a80001da'), BSON::ObjectId('502437fcb9825407a80001e7'), BSON::ObjectId('502437fcb9825407a80001ff'), BSON::ObjectId('502437fcb9825407a800020b'), BSON::ObjectId('502437fcb9825407a8000218'), BSON::ObjectId('502437fcb9825407a8000222'), BSON::ObjectId('502437fcb9825407a800022b'), BSON::ObjectId('502437fcb9825407a8000237')]}}, "fields"=>nil})
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>250298381714612}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>250879564925682}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8062627951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Company"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>271980246180279}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>127758250697317}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>22454953030}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Concert tour"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>200394249984402}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>225651384162171}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>347794205242578}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"App page"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>298343600202037}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>132989837219}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"University"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>457230227642474}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Artist"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>187751707984066}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Website"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>137277736344628}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>387718821281259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"App page"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>370298573030780}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Society/culture"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>187048148005386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>144134622356223}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Media/news/publishing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>276105629116383}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>190825564271509}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Media/news/publishing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>80749331970}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>159155527484623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Cause"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>222304434557271}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"App page"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>299557340060524}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>157083194326498}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Bank/financial institution"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>301273499944136}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Sports/recreation/activities"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>218878148136874}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>287166241374277}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Website"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>92304305160}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Actor/director"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>297031150144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Entertainment"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>140623412731740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Food/beverages"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>121102874568855}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>118284881519112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>124627717615753}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Website"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>179651025474927}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>121158391292198}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>179050858774245}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>128603890541167}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Arts/humanities"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>130248273763874}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Computers/technology"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>104583736290015}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>211262382280122}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>239885712699257}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Media/news/publishing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>150868873370}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Business/economy"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>215937385326}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>286041364797461}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"University"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>40221898427}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>350013925018324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>76566731864}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>149422618463548}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Company"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>119702488081975}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>149892381710213}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Actor/director"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>159537847465522}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10394381762}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>237012349642681}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Website"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>147341601995405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>53741191071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>251840721554522}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"App page"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>24628319484}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>116947335059048}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>288683354478612}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>98927367004}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>166638826764770}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>173899262707617}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>287329684613485}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>48875769308}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>115858281788518}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>113210992066347}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>92637159209}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"University"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>136105379793940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Small business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>165946976754475}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>93381751409}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Record label"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>232599382754}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>7688670492}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Clothing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>172178616205523}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Unknown"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>23076444520}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>18359161762}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>176164665741939}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"App page"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>110247285732610}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>131493600285902}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"University"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>54185757622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Clothing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>18658326042}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"News/media"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>14566705955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>19222378264}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>149052121795013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>133404872392}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>159722467404597}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>22430220222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>208641299172736}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Bar"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>121301934630062}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Computers/technology"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>279865033224}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Restaurant/cafe"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>326149431743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10341169793}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>5771846193}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>164749766913950}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>192305270823723}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>195710663815539}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>51763478150}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Consulting/business services"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>154977557905194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Arts/entertainment/nightlife"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>128801823861572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Food/beverages"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>148836072037}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>193820437318986}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>192069374156614}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Arts/entertainment/nightlife"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>149198889163}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>9267161091}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8746730308}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>171944489519917}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Product/service"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>5162567788}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>81741167807}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10959868407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>17404574370}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>280120585185}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>44491859955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>49233989571}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Radio station"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>20134383992}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Museum/art gallery"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>113148178744454}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>275061916612}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>271463270665}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>133864623313654}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Professional services"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>168216873205490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>146462796917}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>160126917345125}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>162690270426189}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Internet/software"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>32619688812}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"School"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>108676949202406}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>147181615294572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>125516656016}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>257268460133}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Travel/leisure"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>159951417368845}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Professional services"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>143844865793}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Consulting/business services"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Non-profit organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10630133982}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Club"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>6486268470}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>269590564620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"School"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>127000263995517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>49387521654}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Club"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>12786606933}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>216924332410}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>95936718394}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>20515131922}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>35718435694}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>103142276392729}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>36590889165}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>11052436635}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>18279738412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10582587785}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>112669668747109}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>6871006677}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8522162755}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8719038675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>5973249561}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"University"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>44514503748}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>7807422276}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>117533210756}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>129863715621}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>38532258901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>371025842435}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Community organization"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>10569236108}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Fictional character"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>336231780970}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>327758349743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Education"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>103512251417}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>11955325695}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>20396365540}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8651510029}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>5660597307}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>6092929747}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>6798562721}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>22934684677}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>8028052326}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>36926621435}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Artist"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>7085518563}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>82151588544}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>9670237682}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>39633062089}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>33719154791}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>102219611945}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>6780627097}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>7530846195}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>14210012172}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>60144069162}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>15456537827}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Public figure"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>78789848792}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Travel/leisure"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>149568353630}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Travel/leisure"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>103039080948}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Computers/internet"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>234407620388}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Clothing"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>23698278048}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Club"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>25747171884}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Travel/leisure"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>41068942022}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Local business"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>29112278285}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>51021743771}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Food/beverages"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>91132889777}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Musician/band"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>13274077007}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Tv show"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>18409425969}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Food/beverages"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>34979636189}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Company"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>56718692455}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Artist"}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_likes'].find({:facebook_id=>21376831257}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_categories'].find({:name=>"Radio station"}).sort([[:_id, :asc]])
MONGODB near_io_dev['users'].update({"_id"=>BSON::ObjectId('5023b1f7b98254fd53000001')}, {"$set"=>{"last_sign_in_at"=>2012-10-04 23:33:01 UTC, "current_sign_in_at"=>2012-10-06 20:55:40 UTC, "sign_in_count"=>61}})
Redirected to http://localhost:3000/
Completed 302 Found in 94688ms


Started GET "/" for 127.0.0.1 at 2012-10-06 13:55:40 -0700
Processing by NetworksController#index as HTML
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({})
  Rendered networks/index.html.erb within layouts/application (1004.8ms)
Completed 200 OK in 1018ms (Views: 1017.3ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 13:55:54 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 2739ms

Mongoid::Errors::InvalidCollection (Access to the collection for FacebookEvent is not allowed since it is an embedded document, please access a collection from the root document.):
  app/models/facebook_event.rb:40:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (16.7ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:00:19 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 4244ms

NoMethodError (undefined method `attending=' for #<Hash:0x007fc24b8f2068>):
  app/models/facebook_event.rb:45:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (2.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.9ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:01:26 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 2626ms

BSON::InvalidObjectId (illegal ObjectId format):
  app/models/facebook_event.rb:40:in `new'
  app/models/facebook_event.rb:40:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.1ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:02:03 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 4362ms

NoMethodError (undefined method `new?' for nil:NilClass):
  app/models/facebook_event.rb:47:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.8ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:04:28 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 3307ms

NoMethodError (undefined method `new?' for nil:NilClass):
  app/models/facebook_event.rb:47:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.8ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:04:42 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 2612ms

NoMethodError (undefined method `new?' for nil:NilClass):
  app/models/facebook_event.rb:47:in `block (2 levels) in get_all_by_facebook_id'
  app/models/facebook_event.rb:39:in `each'
  app/models/facebook_event.rb:39:in `block in get_all_by_facebook_id'
  app/models/facebook_event.rb:38:in `loop'
  app/models/facebook_event.rb:38:in `get_all_by_facebook_id'
  app/models/facebook_model.rb:3:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (53.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (69.0ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:05:05 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].insert([{"_id"=>BSON::ObjectId('50709d19b98254020000000d'), "facebook_id"=>100003051758743, "name"=>"Cristina Fedorca", "first_name"=>"Cristina", "last_name"=>"Fedorca", "link"=>"http://www.facebook.com/profile.php?id=100003051758743", "username"=>nil, "gender"=>"female", "locale"=>nil, "updated_time"=>2012-10-05 14:25:01 UTC}])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 71196ms

NameError (undefined local variable or method `fb_event' for #<FacebookGroup:0x007fc24b647a20>):
  app/models/facebook_model.rb:6:in `block in get_facebook_events'
  app/models/facebook_model.rb:5:in `each'
  app/models/facebook_model.rb:5:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (16.0ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:06:35 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>451159858257915}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 62810ms

NameError (undefined local variable or method `fb_event' for #<FacebookGroup:0x007fc24ab4a2f8>):
  app/models/facebook_model.rb:8:in `block in get_facebook_events'
  app/models/facebook_model.rb:5:in `each'
  app/models/facebook_model.rb:5:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (16.6ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:13:46 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>451159858257915}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('50709f50b982540200000057'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec07b982547a27000009'), BSON::ObjectId('5037ec07b982547a2700000a')], "_id"=>BSON::ObjectId('50709f0fb98254020000003c'), "facebook_id"=>451159858257915, "name"=>"Work at the 2012 Olympics: Last Minute Vacancy", "description"=>"Looking for your dream summer job? A Last-Minute Vacancy at the Olympics has just opened!\n\nWe are currently looking to recruit bar and waiting staff to work for one of the most prestigious areas of the 2012 games. Training is Provided.\n\nThe Games are well under way but you can still be part of the fun! Apply online now while it lasts!\n\nhttp://www.facebook.com/London2012Jobs/app_346156652067256\n\nGood luck!", "owner"=>{"name"=>"Chloe King", "id"=>"100002626025799"}, "location"=>"London 2012", "venue"=>{"id"=>"259479457407"}, "timezone"=>nil, "start_time"=>2012-08-10 07:00:00 UTC, "end_time"=>nil, "updated_time"=>2012-08-02 12:55:08 UTC, "privacy"=>nil, "attending"=>2}}])
Completed 500 Internal Server Error in 69841ms

NoMethodError (undefined method `events' for #<FacebookGroup:0x007fc24d547c68>):
  app/models/facebook_model.rb:16:in `block in get_facebook_events'
  app/models/facebook_model.rb:5:in `each'
  app/models/facebook_model.rb:5:in `get_facebook_events'
  app/models/group.rb:43:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.1ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:24:11 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>451159858257915}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>401882673194419}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c3b982540200000073'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec0bb982547a2700000e'), BSON::ObjectId('5037ec07b982547a2700000a')], "_id"=>BSON::ObjectId('5070a182b982540200000059'), "facebook_id"=>401882673194419, "name"=>"Last Opportunity to work at the Olympics!", "description"=>"YOU CAN STILL WORK AT THE OLYMPICS!!\n1000 Jobs still available! follow the link for more info!\nYou don't have to live in London! They provide Housing!\nOnce in a lifetime Opportunity \n", "owner"=>{"name"=>"Chloe King", "id"=>"100002626025799"}, "location"=>nil, "venue"=>nil, "timezone"=>nil, "start_time"=>2012-07-28 07:00:00 UTC, "end_time"=>nil, "updated_time"=>2012-07-25 10:38:27 UTC, "privacy"=>nil, "attending"=>2}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101294623351019}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c4b982540200000074'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec0ab982547a2700000c')], "_id"=>BSON::ObjectId('5070a182b98254020000005a'), "facebook_id"=>101294623351019, "name"=>"Last Minute Opportunity to Work at the Olympics!", "description"=>"YOU CAN STILL WORK AT THE OLYMPICS!!\n1000 Jobs still available! follow the link for more info!\nOnce in a lifetime Opportunity \nFollow the LINK BELOW!\n\nhttp://www.facebook.com/London2012Jobs/app_346156652067256", "owner"=>{"name"=>"Peter Kay", "id"=>"100003309420818"}, "location"=>nil, "venue"=>nil, "timezone"=>nil, "start_time"=>2012-07-28 07:00:00 UTC, "end_time"=>nil, "updated_time"=>2012-07-26 09:40:22 UTC, "privacy"=>nil, "attending"=>1}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>239150199539216}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c4b982540200000075'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec0ab982547a2700000c')], "_id"=>BSON::ObjectId('5070a182b98254020000005b'), "facebook_id"=>239150199539216, "name"=>"Work at the 2012 Olympics: Last Minute Vacancy", "description"=>"Looking for your dream summer job? A Last-Minute Vacancy at the Olympics has just opened!\n\nWe are currently looking to recruit bar and waiting staff to work for one of the most prestigious areas of the 2012 games. Training is Provided.\n\nApply online now while it lasts!\n\nhttp://www.facebook.com/London2012Jobs/app_346156652067256\n\nGood luck!", "owner"=>{"name"=>"Peter Kay", "id"=>"100003309420818"}, "location"=>nil, "venue"=>nil, "timezone"=>nil, "start_time"=>2012-07-21 07:00:00 UTC, "end_time"=>nil, "updated_time"=>2012-07-18 13:06:49 UTC, "privacy"=>nil, "attending"=>1}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>174594792674227}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c4b982540200000076'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec0db982547a27000011'), BSON::ObjectId('5037ec07b982547a2700000a')], "_id"=>BSON::ObjectId('5070a183b98254020000005c'), "facebook_id"=>174594792674227, "name"=>"Work at the 2012 Olympics: Last Minute Vacancy", "description"=>"Looking for your dream summer job? A Last-Minute Vacancy at the Olympics has just opened!\n\nWe are currently looking to recruit bar and waiting staff to work for one of the most prestigious areas of the 2012 games. Training is Provided.\n\nApply online now while it lasts!\n\nhttp://www.facebook.com/London2012Jobs/app_346156652067256\n\nGood luck!", "owner"=>{"name"=>"Chloe King", "id"=>"100002626025799"}, "location"=>"London, United Kingdom", "venue"=>{"name"=>"London, United Kingdom"}, "timezone"=>nil, "start_time"=>2012-07-19 07:00:00 UTC, "end_time"=>nil, "updated_time"=>2012-07-11 22:24:57 UTC, "privacy"=>nil, "attending"=>2}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>278226932257768}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c5b982540200000077'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec0eb982547a27000013'), BSON::ObjectId('5037ec0fb982547a27000014')], "_id"=>BSON::ObjectId('5070a183b98254020000005d'), "facebook_id"=>278226932257768, "name"=>"Networking event at FLUTE CHAMPAGNE BAR with FREE COCKTAIL !!", "description"=>"We mix and mingle at this extremely classy Champagne bar in Central London.\n\nNo entry fee.\n\nComplimentary cocktail to everybody who is a new client of Flute as long as you sign up for their group\n\nhttps://www.facebook.com/groups/282120291861248/\n\nJust to clarify\n\n1) Join the group\n2) The day of the event your name will be on a special list, give your name and you will receive a complimentary cocktail\n\nSimple as that\n\nDress code, smart and elegant.\n\nWe start from 7pm.\n\nFood can be ordered on site, they have a good selection of Japanese food.\n\nFor more information, call me on 07789 740 193", "owner"=>{"name"=>"Duccio Zambrini", "id"=>"100002734460256"}, "location"=>"Flûte London", "venue"=>{"name"=>"Flûte London"}, "timezone"=>"Europe/London", "start_time"=>2012-04-05 18:00:00 UTC, "end_time"=>2012-04-05 22:00:00 UTC, "updated_time"=>2012-04-01 08:41:53 UTC, "privacy"=>nil, "attending"=>2}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>246134372111144}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c5b982540200000078'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('50344b2cb9825401a9000061'), BSON::ObjectId('5037ec10b982547a27000016'), BSON::ObjectId('50344b3bb9825401a9000075'), BSON::ObjectId('5037ec10b982547a27000017'), BSON::ObjectId('5037ec11b982547a27000018'), BSON::ObjectId('5037ec11b982547a27000019'), BSON::ObjectId('5037ec11b982547a2700001a'), BSON::ObjectId('50539c55b982543c04000002'), BSON::ObjectId('5037ec12b982547a2700001b'), BSON::ObjectId('5037ec12b982547a2700001c'), BSON::ObjectId('5037ec12b982547a2700001d'), BSON::ObjectId('5037ec12b982547a2700001e'), BSON::ObjectId('5037ec13b982547a2700001f')], "_id"=>BSON::ObjectId('5070a183b98254020000005e'), "facebook_id"=>246134372111144, "name"=>"RICH MARTELL (FitFinder) & EntrepreneurFirst grad scheme", "description"=>"\t\nIn 2010, Rich Martell, a third-year Computer Sciences student at UCL, set-up the website FitFinder. It allowed students revising Finals in the library to share their wondering-eye activities in an online capacity..\n\nHe made the site live one Friday. \nOn Saturday the site had 2000 unique users\nwhich rose to 8,500 on Sunday \nand 18,000 on Monday..\n\nThe rest is history. On graduating from UCL Rich continued with the company now re-named Floxx.com and runs it out of his own offices in Old Street.\n\n*** Tuesday- 22/11/11- The Jeremy Bentham Room- 6pm ***\nUCL ENTERPRISE SOCIETY presents:\n\n\"Starting your own business- straight out of Uni\"\n\nA Panel Discussion with RICH MARTELL and The ENTREPRENEUR FIRST grad scheme\n\nENTREPRENEUR FIRST grad scheme: a two-year programme through which graduates with the most promising business ideas will get the opportunity to start their business, with the support of corporate mentoring, business training and networking.. Interested so far? Come along to hear the extent of experience it has to offer..\n\nWe encourage this event to all:\n\n- Students looking for a unique grad scheme with real opportunity \n- Students looking to set up a business straight after uni but unsure how to without the contacts and business training\n- Anyone with an interest in learning from and meeting the Mark Zuckerberg of UCL\n\nTICKETING: this event is FREE however seats are LIMITED to 100. Arrive early to guarantee a place.\n\nIs this event your cup of tea? JOIN the UCL Enterprise Society for more..\nFB: www.facebook.com/groups/2368509106\nMailing list: www.groupspaces.com/uclenterprise/external/subscribe", "owner"=>nil, "location"=>"The Jeremy Bentham", "venue"=>{"latitude"=>51.523517484857, "longitude"=>-0.13532995963215, "id"=>"116857491704656"}, "timezone"=>nil, "start_time"=>2011-11-23 02:00:00 UTC, "end_time"=>2011-11-23 04:30:00 UTC, "updated_time"=>2011-11-13 18:40:24 UTC, "privacy"=>"OPEN", "attending"=>13}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>137191673053171}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c5b982540200000079'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec15b982547a27000021'), BSON::ObjectId('5037ec15b982547a27000022'), BSON::ObjectId('5037ec16b982547a27000023'), BSON::ObjectId('5037ec16b982547a27000024'), BSON::ObjectId('5037ec16b982547a27000025'), BSON::ObjectId('5037ec16b982547a27000026'), BSON::ObjectId('5037ec17b982547a27000027'), BSON::ObjectId('50344b2cb9825401a9000061'), BSON::ObjectId('5037ec17b982547a27000028'), BSON::ObjectId('5037ec17b982547a27000029'), BSON::ObjectId('5037ec07b982547a27000009'), BSON::ObjectId('5037ec18b982547a2700002a'), BSON::ObjectId('5037ec18b982547a2700002b'), BSON::ObjectId('5037ec19b982547a2700002c'), BSON::ObjectId('5037ec1ab982547a2700002d'), BSON::ObjectId('5037ec1ab982547a2700002e'), BSON::ObjectId('5037ec1bb982547a2700002f'), BSON::ObjectId('5037ec1bb982547a27000030'), BSON::ObjectId('5037ec1bb982547a27000031'), BSON::ObjectId('5037ec1cb982547a27000032'), BSON::ObjectId('5037ec1cb982547a27000033'), BSON::ObjectId('5037ec1db982547a27000034'), BSON::ObjectId('5037ec1db982547a27000035'), BSON::ObjectId('5037ec1eb982547a27000036'), BSON::ObjectId('5037ec1eb982547a27000037'), BSON::ObjectId('5037ec11b982547a27000018'), BSON::ObjectId('5037ec1fb982547a27000038'), BSON::ObjectId('5037ec1fb982547a27000039'), BSON::ObjectId('5037ec1fb982547a2700003a'), BSON::ObjectId('5037ec20b982547a2700003b'), BSON::ObjectId('5037ec20b982547a2700003c'), BSON::ObjectId('5037ec21b982547a2700003d'), BSON::ObjectId('5037ec21b982547a2700003e'), BSON::ObjectId('5037ec22b982547a2700003f'), BSON::ObjectId('5037ec22b982547a27000040'), BSON::ObjectId('5037ec10b982547a27000017'), BSON::ObjectId('5037ec23b982547a27000041'), BSON::ObjectId('5037ec23b982547a27000042'), BSON::ObjectId('5037ec23b982547a27000043'), BSON::ObjectId('5037ec24b982547a27000044'), BSON::ObjectId('50344c2ab9825401a90001a7'), BSON::ObjectId('5037ec25b982547a27000045'), BSON::ObjectId('5037ec25b982547a27000046'), BSON::ObjectId('5037ec26b982547a27000047'), BSON::ObjectId('5037ec26b982547a27000048'), BSON::ObjectId('5037ec27b982547a27000049'), BSON::ObjectId('5037ec10b982547a27000016'), BSON::ObjectId('5037ec27b982547a2700004a'), BSON::ObjectId('50539c55b982543c04000002'), BSON::ObjectId('5037ec28b982547a2700004b'), BSON::ObjectId('5037ec28b982547a2700004c'), BSON::ObjectId('5037ec29b982547a2700004d'), BSON::ObjectId('5037ec29b982547a2700004e'), BSON::ObjectId('5037ec2ab982547a2700004f'), BSON::ObjectId('5037ec2ab982547a27000050'), BSON::ObjectId('5037ec2bb982547a27000051'), BSON::ObjectId('5037ec12b982547a2700001c'), BSON::ObjectId('5037ec2bb982547a27000052'), BSON::ObjectId('5037ec2cb982547a27000053'), BSON::ObjectId('5037ec2cb982547a27000054'), BSON::ObjectId('5037ec2db982547a27000055'), BSON::ObjectId('5037ec2db982547a27000056'), BSON::ObjectId('50709d19b98254020000000d'), BSON::ObjectId('5037ec2eb982547a27000057'), BSON::ObjectId('5037ec2eb982547a27000058'), BSON::ObjectId('5037ec2eb982547a27000059'), BSON::ObjectId('5037ec2fb982547a2700005a'), BSON::ObjectId('5037ec2fb982547a2700005b'), BSON::ObjectId('5037ec30b982547a2700005c'), BSON::ObjectId('5037ec30b982547a2700005d'), BSON::ObjectId('50344c1db9825401a9000196'), BSON::ObjectId('5037ec31b982547a2700005e'), BSON::ObjectId('5037ec31b982547a2700005f'), BSON::ObjectId('5037ec32b982547a27000060'), BSON::ObjectId('5037ec32b982547a27000061'), BSON::ObjectId('5037ec33b982547a27000062'), BSON::ObjectId('5037ec33b982547a27000063'), BSON::ObjectId('5037ec33b982547a27000064'), BSON::ObjectId('5037ec34b982547a27000065'), BSON::ObjectId('5037ec34b982547a27000066'), BSON::ObjectId('5037ec35b982547a27000067'), BSON::ObjectId('5037ec35b982547a27000068'), BSON::ObjectId('5037ec11b982547a2700001a'), BSON::ObjectId('5037ec36b982547a27000069'), BSON::ObjectId('5037ec36b982547a2700006a'), BSON::ObjectId('5037ec37b982547a2700006b'), BSON::ObjectId('5037ec37b982547a2700006c'), BSON::ObjectId('5037ec12b982547a2700001e'), BSON::ObjectId('5037ec38b982547a2700006d'), BSON::ObjectId('5037ec38b982547a2700006e'), BSON::ObjectId('5037ec38b982547a2700006f'), BSON::ObjectId('50344c1fb9825401a9000198'), BSON::ObjectId('5037ec39b982547a27000070'), BSON::ObjectId('5037ec39b982547a27000071'), BSON::ObjectId('5037ec11b982547a27000019')], "_id"=>BSON::ObjectId('5070a186b98254020000005f'), "facebook_id"=>137191673053171, "name"=>"Take A Flight To The Future! - Silicon Valley comes to UCL", "description"=>"UPDATE: Over 150 tickets have been sold! Event is at Full capacity, if you would like to be considered for waiting list please email info@uclenterprise.org. Thank you.\n\n\"Take a flight to the future!” at UCL Enterprise Society’s biggest event of the semester – Silicon Valley comes to UCL.\n\n\n**RSVP on facebook does not mean you have a ticket**\n**Doors will open at 6.30pm and close at 7pm shut, if you are late you will only be allowed in after 8.30pm due to the nature of the event**\n\n Where is technology heading to? What is the future of social media in helping start ups? How to embrace failure? What is it like in the Silicon Valley? Have an idea and dont know what the hell to do with it?!\n Come and find out!\n\nWith talks from entrepreneurs who have had businesses both in London and the Silicon Valley, pitches from start-ups within the UCL community, speed dating with industry experts and tons of food and drinks this is surely an event not to miss.\n\nThere will be a competition running on the night with a an ipod up for grabs as well, no preparartion required!\n\n Entry is free but a RSVP ticket is required to enter as we only have 100 tickets for the night! \n\nREGISTRATION NOW OPEN at : http://flighttothefuture-autohome.eventbrite.com/   ---- get your tickets here!  \n", "owner"=>nil, "location"=>"Jeremy  Bentham Room (JBR) , UCL Wilkins Building", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-11-19 02:30:00 UTC, "end_time"=>2011-11-19 06:30:00 UTC, "updated_time"=>2011-11-16 12:19:23 UTC, "privacy"=>"OPEN", "attending"=>95}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>193063270745693}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c5b98254020000007a'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec3bb982547a27000073'), BSON::ObjectId('5037ec3cb982547a27000074'), BSON::ObjectId('5037ec3cb982547a27000075'), BSON::ObjectId('5037ec3db982547a27000076'), BSON::ObjectId('5037ec3db982547a27000077'), BSON::ObjectId('5037ec3eb982547a27000078'), BSON::ObjectId('5037ec3eb982547a27000079'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec3fb982547a2700007b'), BSON::ObjectId('5037ec40b982547a2700007c'), BSON::ObjectId('5037ec41b982547a2700007d'), BSON::ObjectId('5037ec29b982547a2700004e'), BSON::ObjectId('5037ec31b982547a2700005e'), BSON::ObjectId('5037ec41b982547a2700007e'), BSON::ObjectId('5037ec33b982547a27000063'), BSON::ObjectId('5037ec42b982547a2700007f'), BSON::ObjectId('5037ec42b982547a27000080')], "_id"=>BSON::ObjectId('5070a19eb982540200000060'), "facebook_id"=>193063270745693, "name"=>"Lifestyle Entrepreneurship Event - Make a Living by Doing what you love!", "description"=>"Following on from the phenomenal success of our Young Entrepreneur Event last month, the UCL Enterprise Society is proud to present the Lifestyle Entrepreneurship Event.\n\nWhile some only dream about making a living from doing things they love, others have made it a reality; and so can you! \n\nJoin us on June 15th at Roberts 106 for an inspiring speaker event featuring two lifestyle entrepreneurs who have turned their passion into a living. Learn from their experiences and discover how you can build your own lifestyle business.\n\nFollowed by Drinks and Networking in the Lower Refectory ! \n\nSpeakers\n=======\n\n1) Mills™ has created apps which have sold globally in their hundreds. He openly talks about the ups and downs of running a 90 person, cash positive, non-venture funded, idea generating Mothership.\n\n2) Joseph Tenzin Oliver is an internationally recognised sustainable lifestyle pioneer and Founder of BASH. Joe’s mission is to change the world by making ethical lifestyles desirable and mainstream. Working with over 50 household brands, he has proved that his vision has shaped both UK and international business practice in the entertainment, music and creative industries. His achievements include winning many industry awards, appearing on CNN and BBC News and being selected as a London Leader by the Mayor of London. ", "owner"=>nil, "location"=>"Roberts 106", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-06-16 00:30:00 UTC, "end_time"=>2011-06-16 03:30:00 UTC, "updated_time"=>2011-06-11 12:38:07 UTC, "privacy"=>"OPEN", "attending"=>17}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>142677182468299}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c5b98254020000007b'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec44b982547a27000082'), BSON::ObjectId('5037ec26b982547a27000047'), BSON::ObjectId('5037ec45b982547a27000083'), BSON::ObjectId('5037ec45b982547a27000084'), BSON::ObjectId('5037ec46b982547a27000085'), BSON::ObjectId('5037ec1fb982547a27000038'), BSON::ObjectId('5037ec3bb982547a27000073'), BSON::ObjectId('5037ec3eb982547a27000079'), BSON::ObjectId('5037ec3db982547a27000077'), BSON::ObjectId('5037ec46b982547a27000086'), BSON::ObjectId('5037ec47b982547a27000087'), BSON::ObjectId('5037ec3cb982547a27000075'), BSON::ObjectId('5037ec47b982547a27000088'), BSON::ObjectId('5037ec29b982547a2700004e'), BSON::ObjectId('5037ec31b982547a2700005e'), BSON::ObjectId('5037ec47b982547a27000089'), BSON::ObjectId('5037ec48b982547a2700008a'), BSON::ObjectId('5037ec42b982547a27000080'), BSON::ObjectId('5037ec48b982547a2700008b'), BSON::ObjectId('5037ec33b982547a27000063'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec0eb982547a27000013'), BSON::ObjectId('5037ec34b982547a27000066'), BSON::ObjectId('5037ec49b982547a2700008c')], "_id"=>BSON::ObjectId('5070a1a3b982540200000061'), "facebook_id"=>142677182468299, "name"=>"Young Entrepreneur Event ", "description"=>"Join us on May 11th for an exciting speaker event where you will meet three successful young entrepreneurs who will tell their story on how they made it. \n\nEntry is free and on a first come first serve basis.\n\nYou could meet the next Mark Zuckerberg!\n\nThey will share their start-up experiences, how they overcame tough challenges and provide valuable advice to aspiring young entrepreneurs on how to succesfully start a business.\n \n\nSpeakers include \n- Rich Martell - Floxx/FitFinder\n- David Langer - Groupspaces\n- David Erasmus - Cubate\n\nWhere and when?\n \nThe speaker event will take place from 17:30-19:30 at Roberts G06 (Engineering Front Building). Afterwards there will be a drinks reception from 19:30-20:30 at Wilkins Lower Refectory.\n", "owner"=>nil, "location"=>"Roberts G06, UCL", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-05-12 00:30:00 UTC, "end_time"=>2011-05-12 02:30:00 UTC, "updated_time"=>2011-04-23 10:45:54 UTC, "privacy"=>"OPEN", "attending"=>24}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>201393349886856}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c6b98254020000007c'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec4bb982547a2700008e'), BSON::ObjectId('5037ec4cb982547a2700008f'), BSON::ObjectId('5037ec4cb982547a27000090'), BSON::ObjectId('5037ec47b982547a27000088'), BSON::ObjectId('5037ec4db982547a27000091'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec4db982547a27000092')], "_id"=>BSON::ObjectId('5070a1a9b982540200000062'), "facebook_id"=>201393349886856, "name"=>"Start-up Business Simulation Game", "description"=>"Do you have what it takes to start and run your own business? Would you like to test and improve your entrepreneurial skills in a competitive environment?  Take part in the exciting and innovative business simulation game ‘SimVenture’ and learn about the different challenges faced by businesses in a fun, challenging and interactive environment!\n\nThe event is organised by the UCL Enterprise Society and will run on:\nWednesday March 16th 2011 from 12.30-6.30pm.  \nLocation: Nyholm room Christopher ingold Building\nInterested parties should email 'uccanno@live.ucl.ac.uk' with their groups (max. 4 per team). \nRegister for this event asap as places are limited and will go extremely fast!", "owner"=>nil, "location"=>"Nyholm room Christopher ingold Building", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-03-16 19:30:00 UTC, "end_time"=>2011-03-17 01:30:00 UTC, "updated_time"=>2011-02-27 19:28:34 UTC, "privacy"=>"OPEN", "attending"=>7}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>195635683783207}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c6b98254020000007d'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec34b982547a27000066'), BSON::ObjectId('5037ec4fb982547a27000094'), BSON::ObjectId('5037ec31b982547a2700005e')], "_id"=>BSON::ObjectId('5070a1abb982540200000063'), "facebook_id"=>195635683783207, "name"=>"National Student Enterprise Conference in Manchester - Register!!", "description"=>"ReShaping Britain is run in partnership with Manchester Entrepreneurs, between 25-27 February, 2011, is set to attract the most promising students from the Universities across the UK as well as leading academics, researchers, investors, policy makers, international corporates, global entrepreneurs and the media.\n\nSaturday, February 26, 2011 until Sunday, February 27, 2011 at 5:00 PM\n\nMore info: www.nacue.com/nsec\n\n\n\n", "owner"=>nil, "location"=>"Manchester ", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-02-26 18:00:00 UTC, "end_time"=>2011-02-28 01:00:00 UTC, "updated_time"=>2011-01-24 10:47:20 UTC, "privacy"=>"OPEN", "attending"=>4}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>111560732254568}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c6b98254020000007e'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('50344c29b9825401a90001a6'), BSON::ObjectId('5037ec52b982547a27000096'), BSON::ObjectId('5037ec52b982547a27000097'), BSON::ObjectId('5037ec52b982547a27000098'), BSON::ObjectId('5037ec3cb982547a27000074'), BSON::ObjectId('5037ec46b982547a27000085'), BSON::ObjectId('5037ec15b982547a27000022'), BSON::ObjectId('5037ec4bb982547a2700008e'), BSON::ObjectId('5037ec47b982547a27000087'), BSON::ObjectId('5037ec53b982547a27000099'), BSON::ObjectId('5037ec53b982547a2700009a'), BSON::ObjectId('5037ec54b982547a2700009b'), BSON::ObjectId('5037ec21b982547a2700003e'), BSON::ObjectId('5037ec46b982547a27000086'), BSON::ObjectId('5037ec3eb982547a27000079'), BSON::ObjectId('5037ec07b982547a27000009'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec54b982547a2700009c'), BSON::ObjectId('5037ec47b982547a27000089'), BSON::ObjectId('5037ec29b982547a2700004e'), BSON::ObjectId('5037ec55b982547a2700009d'), BSON::ObjectId('5037ec56b982547a2700009e'), BSON::ObjectId('5037ec49b982547a2700008c'), BSON::ObjectId('5037ec42b982547a27000080'), BSON::ObjectId('5037ec57b982547a2700009f'), BSON::ObjectId('5037ec31b982547a2700005e'), BSON::ObjectId('5037ec57b982547a270000a0'), BSON::ObjectId('5037ec58b982547a270000a1'), BSON::ObjectId('5037ec58b982547a270000a2'), BSON::ObjectId('5037ec59b982547a270000a3'), BSON::ObjectId('5037ec34b982547a27000066'), BSON::ObjectId('5037ec59b982547a270000a4')], "_id"=>BSON::ObjectId('5070a1acb982540200000064'), "facebook_id"=>111560732254568, "name"=>"The Groupon story - Getting beyond $6Bn in 2 years", "description"=>"UCL Enterprise Society and Kings College London Business Club present:\n\nManaging Director of Groupon UK, Christopher Muhr will be engaging with the young entrepreneurs of KCL and UCL and their friends in the London network; sharing his story; and how start-ups must be taken seriously. With massive expansion in the Asian markets before the IPO, Groupon has definitely made it as a breakthrough model of entrepreneurship, which should not be missed! \n\nVenue: Edmund J Saffra, Strand Campus, King's College London\n\nFollowed by networking at Adam Street private members club (8.30pm onwards)", "owner"=>nil, "location"=>"Edmund J Saffra, Strand Campus, King's College London  Followed by networking at Adam Street private members club", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-02-23 03:00:00 UTC, "end_time"=>2011-02-23 06:00:00 UTC, "updated_time"=>2011-02-20 12:05:46 UTC, "privacy"=>"OPEN", "attending"=>32}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>128816703851870}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c6b98254020000007f'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec45b982547a27000084'), BSON::ObjectId('5037ec3fb982547a2700007a')], "_id"=>BSON::ObjectId('5070a1b5b982540200000065'), "facebook_id"=>128816703851870, "name"=>"UCL Enterprise Soc: Social with South Bank Entrepreneurs ", "description"=>"Begin your year with a BANG by joining South Bank Entrepreneurs and the Prince's Trust for a All WHITE PARTY @ HEYJOCLUB.  Join us for a night of food & champagne at Lord David West magical HeyJo Club, one of London's most exclusive VIP Clubs.  Start the evening off with delicious canape experience at Abracadabra Restaurant and continue the fun at HEYJOCLUB where you will be treated like a VIP for the evening.\n\n\n\nThe evening will engage:\n\n- Professionals & Entrepreneurs\n\n- Music & Networking\n\n- Food & Entertainment\n\n- Press\n\n- iPod Raffle & Prize Giveaways\n\n\n\ndate:  Thursday, Jan 27th\n\ntime:  7pm - close\n\nlocation:  HeyJo Club, St James's St, near Green Park tube station.\n\n\n\n\nFor More Information and to Register: \nhttp://enterprisewinterball.eventbrite.com/", "owner"=>nil, "location"=>"HeyJo Club, St James's St, near Green Park tube station", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-01-28 03:00:00 UTC, "end_time"=>2011-01-28 06:00:00 UTC, "updated_time"=>2011-01-24 10:45:15 UTC, "privacy"=>"OPEN", "attending"=>2}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>130412167024228}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c7b982540200000080'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec5db982547a270000a7'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec42b982547a27000080')], "_id"=>BSON::ObjectId('5070a1b5b982540200000066'), "facebook_id"=>130412167024228, "name"=>"8th Annual Mobile Games Forum 2011 (Jan 26th & 27th)", "description"=>"The Mobile Games Forum 2011 will give attendees the opportunity to gain and exchange knowledge\n\non the current state of the mobile games market and opportunities for the future. Representatives from the entire mobile games ecosystem will be present: operators, publishers, developers, handset manufacturers, payment solutions, VC firms and software providers.\n\nOver 70 experts from companies including Rovio Mobile, Playfish, Aurora Feint, Amazon, Facebook, HandCircus, Windows Phone, Glu Mobile, Google and Lima Sky will be speaking.\n\nTo reserve a space online, please visit:  www.mobilegamesforum.co.uk  ", "owner"=>nil, "location"=>"Mandarin Oriental Hyde Park, London", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-01-26 17:00:00 UTC, "end_time"=>2011-01-28 02:30:00 UTC, "updated_time"=>2011-01-24 10:49:49 UTC, "privacy"=>"OPEN", "attending"=>3}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>194806617196345}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c7b982540200000081'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1b6b982540200000067'), "facebook_id"=>194806617196345, "name"=>"UCL Enterprise Soc: Cleantech Challenge Overview ", "description"=>"Want to win a cash prize by competing with other students from top European business and engineering schools?  The CleanTech Challenge (CTC) is a student competition for clean technology ideas jointly hosted by London Business School and University College of London.\n\nWe would like to invite you to the CleanTech Challenge Kick-off & Speaker event at London Business School on Monday January 24th at 7pm (room LT6) to learn about the CleanTech world, the details of the CleanTech Challenge, and to meet colleagues from all London based participating schools who are interested in forming a team. Join us for an informal Q&A session and refreshments immediately after the event.\n\n\n\nPlease register for this event on http://ctc-2011kickoff.eventbrite.com/ and visit our website www.cleantechnologychallenge.com", "owner"=>nil, "location"=>"London Business School Room LT6", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-01-25 03:00:00 UTC, "end_time"=>2011-01-25 04:30:00 UTC, "updated_time"=>2011-01-24 11:36:47 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101318436612972}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c7b982540200000082'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec34b982547a27000066')], "_id"=>BSON::ObjectId('5070a1b6b982540200000068'), "facebook_id"=>101318436612972, "name"=>"UCL Enterprise - The 2050 City - Get Involved!!!", "description"=>"Our ‘2050 City' event aims to showcase cutting-edge research at UCL alongside entrepreneurial start-ups developing innovative proaducts.\n\nThis is event will be an excellent opportunity to see what life in the not too distant future might be like  and to help inspire budding entrepreneurs to create innovative new products for the future.\n\nWe hope this will be an opportunity for like-minded aspirants to engage with local research, panel discussions and an interactive technology fair, and discover the possibilities of collaboration.  \n\nWe have various roles available for people who want to be involved in this event, come to one of the information sessions for more information!!!\n\n- Jan 18th 12-2pm Malet Place Eng 1.04\n- Jan 19th 12-2pm Taviton (16) 346\n- Jan 24th 6-8pm Tottenham (188) SB1", "owner"=>nil, "location"=>"Malet Plae Eng 1.04, Taviton (16) 346, Tottenham (188) SB1", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-01-18 20:00:00 UTC, "end_time"=>2011-01-24 22:30:00 UTC, "updated_time"=>2011-01-16 22:06:27 UTC, "privacy"=>"OPEN", "attending"=>2}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>119413568130746}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c7b982540200000083'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec3fb982547a2700007a')], "_id"=>BSON::ObjectId('5070a1b6b982540200000069'), "facebook_id"=>119413568130746, "name"=>"UCL Enterprise - The 2050 City - Get Involved!!!", "description"=>"Our ‘2050 City' event aims to showcase cutting-edge research at UCL alongside entrepreneurial start-ups developing innovative proaducts.\n\nThis is event will be an excellent opportunity to see what life in the not too distant future might be like  and to help inspire budding entrepreneurs to create innovative new products for the future.\n\nWe hope this will be an opportunity for like-minded aspirants to engage with local research, panel discussions and an interactive technology fair, and discover the possibilities of collaboration.  \n\nWe have various roles available for people who want to be involved in this event, come to one of the information sessions for more information!!!\n\n- Jan 18th 12-2pm Malet Place Eng 1.04\n- Jan 19th 12-2pm Taviton (16) 346\n- Jan 24th 6-8pm Tottenham (188) SB1", "owner"=>nil, "location"=>"Malet Plae Eng 1.04, Taviton (16) 346, Tottenham (188) SB1", "venue"=>nil, "timezone"=>nil, "start_time"=>2011-01-18 20:00:00 UTC, "end_time"=>2011-01-24 22:30:00 UTC, "updated_time"=>2011-01-16 21:53:47 UTC, "privacy"=>"OPEN", "attending"=>1}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>140638829320639}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c8b982540200000084'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec26b982547a27000047'), BSON::ObjectId('5037ec1fb982547a27000038'), BSON::ObjectId('5037ec44b982547a27000082'), BSON::ObjectId('5037ec64b982547a270000ac'), BSON::ObjectId('5037ec64b982547a270000ad'), BSON::ObjectId('5037ec4bb982547a2700008e'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec3db982547a27000077'), BSON::ObjectId('5037ec53b982547a27000099'), BSON::ObjectId('5037ec65b982547a270000ae'), BSON::ObjectId('5037ec65b982547a270000af'), BSON::ObjectId('5037ec66b982547a270000b0'), BSON::ObjectId('5037ec66b982547a270000b1'), BSON::ObjectId('5037ec31b982547a2700005e'), BSON::ObjectId('5037ec67b982547a270000b2'), BSON::ObjectId('5037ec67b982547a270000b3'), BSON::ObjectId('5037ec42b982547a27000080'), BSON::ObjectId('5037ec12b982547a2700001e'), BSON::ObjectId('5037ec68b982547a270000b4'), BSON::ObjectId('5037ec68b982547a270000b5'), BSON::ObjectId('5037ec59b982547a270000a3'), BSON::ObjectId('5037ec69b982547a270000b6'), BSON::ObjectId('5037ec34b982547a27000066'), BSON::ObjectId('5037ec49b982547a2700008c')], "_id"=>BSON::ObjectId('5070a1b7b98254020000006a'), "facebook_id"=>140638829320639, "name"=>"UCL: Inspiring Enterprise. Turning Ideas Into Successes", "description"=>"Our first event of the year will show how UCL can help you succeed with your ideas. By highlighting the different organisations tasked with commercial activities and showcasing past successes we hope to inspire all members of UCL to think in new ways about their work.\n\nThe event will consist of interactive presentations by both UCL Advances and UCL Business. Followed by success stories from Dr. Bradford Backus (Audio 3) and Prof. Quentin Pankhurst (Endomagnetics). Finally, this will be followed by an interactive panel discussion drawing on the wealth of experience offered by the participants: \n\n- Prof. Steve Caddick (Vice-Provost of Enterprise)\n- Tim Barnes (Executive Director, UCL Advances)\n- Dr. Anne Lane (Executive Director, UCL Business)\n- Prof. John Bates (Adjunct Professor of Entrepreneurship, London Business School)\n\nThe event will be followed by a drinks reception in the JBR.\n\nRegister now! Places are limited and Entry is Free:\nhttp://groupspaces.com/uclenterprise/item/85776\n", "owner"=>nil, "location"=>"UCL Medical Sciences AV Hill", "venue"=>nil, "timezone"=>nil, "start_time"=>2010-11-25 02:00:00 UTC, "end_time"=>2010-11-25 04:00:00 UTC, "updated_time"=>2010-11-21 09:48:59 UTC, "privacy"=>"OPEN", "attending"=>24}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>122864614439584}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c8b982540200000085'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec6bb982547a270000b8'), BSON::ObjectId('5037ec6bb982547a270000b9'), BSON::ObjectId('5037ec3db982547a27000077'), BSON::ObjectId('5037ec3fb982547a2700007a'), BSON::ObjectId('5037ec12b982547a2700001e'), BSON::ObjectId('506ca8afb982540333000001'), BSON::ObjectId('5037ec6cb982547a270000ba'), BSON::ObjectId('5037ec42b982547a27000080')], "_id"=>BSON::ObjectId('5070a1bcb98254020000006b'), "facebook_id"=>122864614439584, "name"=>"\"The £20 Challenge\" - 48 hours to maximize your start-up capital", "description"=>"Expand your creativity, deal with scarce resources and build a tenacious team that can withhold any challenges. Participate in the £20 Challenge!\n\n\nEach team will get startup capital of £20 and will have 48 hours to generate as much revenue as they can through their innovative ideas.\n\nIf you think you are one of those entrepreneurial and adventurous people who can utilize £20 for a rocket idea, make sure to reserve your spot now as places are limited.\n\nThis is an excellent opportunity to get firsthand experience of business, get involved with entrepreneurship and boost your C.V.\n\n\nReservations will close soon so hurry up and get ready to donn on your creativity suit.\n\nTo register, please vist:\n\nhttp://groupspaces.com/uclenterprise/item/86726\n\nand click buy tickets (Tickets are Free!)\n\n\nThere are awards for the best teams!\n\nThe £20 Challenge is kindly sponsored by Adamant Partners Ltd www.adamantpartners.com", "owner"=>nil, "location"=>"UCL building Tottenham Court Road (188) Room: SB5", "venue"=>nil, "timezone"=>nil, "start_time"=>2010-11-18 02:00:00 UTC, "end_time"=>2010-11-20 02:00:00 UTC, "updated_time"=>2010-11-15 22:57:00 UTC, "privacy"=>"OPEN", "attending"=>8}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>95842197115}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c8b982540200000086'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1beb98254020000006c'), "facebook_id"=>95842197115, "name"=>"Innovative Therapeutics - Create, Fund and Bring to Bedside. ", "description"=>"This drug discovery & development event brings together London renowned bio-entrepreneurs, venture capitalists and acquisition strategists from a global pharmaceutical company to share their expertise and experience while discussing the prospects of small biotechnology start-ups in the current economy climate.  \n\nCatering for enterprising PhDs, postdoc, research staff and MBAs, this event would give you, prospective or early start-ups entrepreneurs, the rare insights to the translational research, biotechnology industry, funding strategies and subsequently pharmaceutical portfolio structures.  Most of all, it is a chance to interact with them and industry experts closely.\n\n\nProgram Schedule: \n\n2.00 - 3.00 pm          Start-ups in Innovative Therapeutics (Innov T)\n\n                              Speakers:  Prof Gregory Gregoriadis, Founder, Director & CSO Lipoxen\n\n                            \n\n3.00 - 3.45pm           Venture Capital Investment on Innov T Start-ups –\n\n                              ( Panel discussion – panellists Dr. Penny Attridge & Dr Stephane Mery)\n\n\n3.45 - 4.30pm           Coffee Break\n\n\n4.30 -5.00pm            Pharma Acquisition Strategy by\n\n                              Speaker: Dr Diana Harbison,  Pfizer WW Development Director\n\n\n5.00 -7.00pm            Reception - Networking\n\n\nBook your tickets at http://innovative-therapeutics.eventbrite.com/.  Limited Seats. \n\n\nBTW we have asked Pfizer to set up a booth or invite a HR person to talk to students interested in working with big pharma. ", "owner"=>nil, "location"=>"LT G06 Robert Building", "venue"=>{"street"=>"Malet Place, UCL", "city"=>"London", "state"=>"England", "country"=>"United Kingdom", "latitude"=>51.5, "longitude"=>-0.116667}, "timezone"=>nil, "start_time"=>2009-06-26 21:00:00 UTC, "end_time"=>2009-06-27 02:00:00 UTC, "updated_time"=>2009-06-10 14:11:56 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>68108417380}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c8b982540200000087'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1beb98254020000006d'), "facebook_id"=>68108417380, "name"=>"Clean Tech @ UCL", "description"=>"UCL Enterprise Society will host an event on Clean Technologies at UCL. We will bring together speakers from around UCL to discuss the clean technology research currently underway at UCL, with a particular focus on the commercial potential / realisation of this research. This will be followed by a networking session with light snacks and beverages.\n\nOur confirmed speakers for this event are as follow:\n\nProf. Tadj Oreszczyn\nSpeech theme: Energy Research at UCL\n\nDr. Dan Brett\nSpeech theme: CleanTech Research in the Centre for CO2 Technology at UCL\n\nMr. Tristan Smith\nSpeech theme: CleanTech research in the SolarFox - UCL's solar powered car\n\nPlease note that there are very limited places available; hence the registration would be based on the first email received.\n\nRegister at http://cleantechatucl.eventbrite.com/", "owner"=>nil, "location"=>"Room 1.03, Malet Place Engineering Building", "venue"=>{"street"=>"Malet Place, UCL"}, "timezone"=>nil, "start_time"=>2009-04-23 01:15:00 UTC, "end_time"=>2009-04-23 04:00:00 UTC, "updated_time"=>2009-04-21 11:32:15 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>53835742445}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c9b982540200000088'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1beb98254020000006e'), "facebook_id"=>53835742445, "name"=>"CUTEC Networking Event: Don’t work network!", "description"=>"CUTEC and UCL Enterprise Society are inviting you to the CUTEC Networking Event: Don’t work network!\n\nWhat: Meet students and entrepreneurs from Cambridge, London, Paris, and Copenhagen!\n\nWho: Entrepreneurial clubs from\n- London Business School\n- Imperial College\n- UCL\n- Kings College\n- HEC School of Management, Paris\n- Copenhagen Business School\n+ entrepreneurs including Dr. Andy Richards, Alan Barrell, and Shamus Husheer\n\nWhen: 7th March 2009; main event at 4pm for a 4:30pm start - tour of Cambridge at 1:30pm & formal dinner at 7pm\n\nWhere:Cambridge, Judge Business School, LT1 & common room\n\nFinding the right core team is the most important aspect to consider when starting a business. During the CUTEC networking event on 7th March, you will have a chance to meet:\n- potential team members for your business idea\n- experienced entrepreneurs willing to share their experience with you\n- people with brilliant ideas you could partner with\n\nThe event will kick off with Director of the Cambridge University Centre for Entrepreneurial Learning (CfEL), Shai Vyakarnam, giving insight into how to make the most of a networking opportunity,\" before the leaders of each participating club introduce their organizations and members. Following a facilitated networking session between students, the big entrepreneurs will make their guest star appearance!\n\nParticipants will also have the opportunity to enjoy a tour of Cambridge before the networking session and a formal dinner in the evening. Please let me know if you would like to attend either or both of the activities.\n\nFor UCL Enterprise Society members who are UCL Postgraduates, Staffs or Alumni, you can reimburse your Cambridge train tickets, provided that you present us the appropriate train receipts.  Contact Sara (sara.ho@uclenterprise.org) on this.\n\nBTW we will have an entourage leaving together! Fun! (More information upon signing up).\n\nPlaces are limited; email events@uclenterprise.org to sign up. \n\nRegistration closes 5pm, 5th March.\n\nFor more details, visit www.cutec.org or contact us at events@uclenterprise.org\n", "owner"=>nil, "location"=>"Judge Business School, LT1 & common room", "venue"=>{"city"=>"Cambridge", "state"=>"England", "country"=>"United Kingdom", "latitude"=>52.2, "longitude"=>0.116667}, "timezone"=>nil, "start_time"=>2009-03-07 21:00:00 UTC, "end_time"=>2009-03-08 06:00:00 UTC, "updated_time"=>2009-02-23 11:30:55 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>73004560008}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c9b982540200000089'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1beb98254020000006f'), "facebook_id"=>73004560008, "name"=>"Your Research to Business: How to Protect Your Research Idea. ", "description"=>"IP is the cardinal substance in your research idea. This  differentiates your idea from other non-research ideas.  But without you knowing IP, your idea is just like any other ideas. Come now and learn more about IP. Who is better to tell you that than Mr. Ian Harvey, Chairman of Intellectual Property Institute and Dr Anne Lane, Executive Director of UCL Business. \n\nWith the opening address by Prof Mike Spyer (UCL Vice Provost Enterprise), Ian will introduce IP to us and followed by real-life UCL case studies elaborated by Anne.\n\nDate: Wed 28 Jan 2009,\nTime: 6.30pm (sharp)\nVenue: Room 106, Roberts Building, UCL (talks); Eng Front Foyer (networking)\n\nJust sign up at events@uclenterprise.org. \n\n Everyone is welcome, especially you who need to know more about IP from these prominent figures in the field.  Event will end with networking drinks and light snacks.", "owner"=>nil, "location"=>" Room 106, Roberts Building, UCL", "venue"=>{"city"=>"London", "state"=>"England", "country"=>"United Kingdom", "latitude"=>51.5, "longitude"=>-0.116667}, "timezone"=>nil, "start_time"=>2009-01-29 02:30:00 UTC, "end_time"=>2009-01-29 05:00:00 UTC, "updated_time"=>2009-01-13 15:12:31 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>44860008542}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1c9b98254020000008a'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec74b982547a270000c0')], "_id"=>BSON::ObjectId('5070a1beb982540200000070'), "facebook_id"=>44860008542, "name"=>"Wed Lunch with UCL Enterprise", "description"=>nil, "owner"=>nil, "location"=>"Engineering Front Building", "venue"=>{"street"=>"Malet Place, University College London", "city"=>"London", "state"=>"England", "country"=>"United Kingdom", "latitude"=>51.5, "longitude"=>-0.116667}, "timezone"=>nil, "start_time"=>2009-01-14 20:30:00 UTC, "end_time"=>2009-01-14 21:30:00 UTC, "updated_time"=>2009-01-14 15:31:57 UTC, "privacy"=>"OPEN", "attending"=>1}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>30202072806}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1cab98254020000008b'), "facebook_event"=>{"attending_facebook_user_ids"=>[], "_id"=>BSON::ObjectId('5070a1beb982540200000071'), "facebook_id"=>30202072806, "name"=>"WHERE TO START?   HOW TO DEAL WITH IT?", "description"=>"Your Research to Business:  Where to Start?  How to deal with it? \n\nMeet these Techno-Entrepreneurs.  No big names, but the REAL entrepreneurs doing the REAL DEAL!\n\nCome talk to them about start-ups and maybe even consider this as a career choice!  \n\nIf you have already an idea but stuck with no resources, what better way to find out than to ask these entrepreneurs in person! \n\nThe first talk will start at 6:30pm followed by panel discussion with four accomplished UCL entrepreneurs.\n \nRefreshments will be served during networking session.\n", "owner"=>nil, "location"=>"Lecture Theatre G06, Roberts Building", "venue"=>{"street"=>"Malet Place, UCL", "city"=>"London", "state"=>"England", "country"=>"United Kingdom", "latitude"=>51.5, "longitude"=>-0.116667}, "timezone"=>nil, "start_time"=>2008-10-16 01:30:00 UTC, "end_time"=>2008-10-16 04:30:00 UTC, "updated_time"=>2008-10-01 21:29:15 UTC, "privacy"=>"OPEN"}}])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>36107751912}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].insert([{"_id"=>BSON::ObjectId('5070a1cab98254020000008c'), "facebook_event"=>{"attending_facebook_user_ids"=>[BSON::ObjectId('5037ec45b982547a27000084'), BSON::ObjectId('5037ec78b982547a270000c3'), BSON::ObjectId('5037ec79b982547a270000c4'), BSON::ObjectId('5037ec7ab982547a270000c5'), BSON::ObjectId('5037ec7bb982547a270000c6'), BSON::ObjectId('5037ec7bb982547a270000c7'), BSON::ObjectId('5037ec7cb982547a270000c8'), BSON::ObjectId('5037ec7cb982547a270000c9'), BSON::ObjectId('5037ec7cb982547a270000ca'), BSON::ObjectId('5037ec7db982547a270000cb'), BSON::ObjectId('5037ec74b982547a270000c0'), BSON::ObjectId('5037ec7db982547a270000cc'), BSON::ObjectId('5037ec7eb982547a270000cd')], "_id"=>BSON::ObjectId('5070a1beb982540200000072'), "facebook_id"=>36107751912, "name"=>"UCL Enterprise Society Relaunch Party", "description"=>"Interact with like-minded people from UCL and London Business School.\nNetwork with UCL's community interested in commercialising research.\nMeet the Enterprise Society team and explore dissemination avenues.\nSeek advice about how to turn your research & ideas into opportunities.\nListen to speakers from all aspect of enterprise at UCL.\nPlease email relaunch@uclenterprise.org for more information.", "owner"=>{"name"=>"Sara Ho", "id"=>"36820531"}, "location"=>"UCL Engineering Front Building Lobby", "venue"=>{"city"=>"London", "state"=>"England", "country"=>"United Kingdom", "latitude"=>51.5, "longitude"=>-0.116667}, "timezone"=>nil, "start_time"=>2008-07-03 01:30:00 UTC, "end_time"=>2008-07-03 04:00:00 UTC, "updated_time"=>2008-06-28 15:04:48 UTC, "privacy"=>"OPEN", "attending"=>13}}])
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50539c9eb982543c04000006'), BSON::ObjectId('50539c9fb982543c04000007'), BSON::ObjectId('50539c9fb982543c04000008'), BSON::ObjectId('50539c9fb982543c04000009'), BSON::ObjectId('50539c9fb982543c0400000a'), BSON::ObjectId('50539c9fb982543c0400000b'), BSON::ObjectId('50539c9fb982543c0400000c'), BSON::ObjectId('50539c9fb982543c0400000d'), BSON::ObjectId('50539c9fb982543c0400000e'), BSON::ObjectId('50539c9fb982543c0400000f'), BSON::ObjectId('50539c9fb982543c04000010'), BSON::ObjectId('50539c9fb982543c04000011'), BSON::ObjectId('50539c9fb982543c04000012'), BSON::ObjectId('50539c9fb982543c04000013'), BSON::ObjectId('50539c9fb982543c04000014'), BSON::ObjectId('50539c9fb982543c04000015'), BSON::ObjectId('50539c9fb982543c04000016'), BSON::ObjectId('50539c9fb982543c04000017'), BSON::ObjectId('50539c9fb982543c04000018'), BSON::ObjectId('50539c9fb982543c04000019'), BSON::ObjectId('50539c9fb982543c0400001a'), BSON::ObjectId('50539c9fb982543c0400001b'), BSON::ObjectId('50539c9fb982543c0400001c'), BSON::ObjectId('50539c9fb982543c0400001d'), BSON::ObjectId('50539c9fb982543c0400001e'), BSON::ObjectId('50539c9fb982543c0400001f'), BSON::ObjectId('50539c9fb982543c04000020'), BSON::ObjectId('5053a367b9825442b5000320'), BSON::ObjectId('5053a367b9825442b5000321'), BSON::ObjectId('5053a367b9825442b5000322'), BSON::ObjectId('5053a367b9825442b5000323'), BSON::ObjectId('5053a367b9825442b5000324'), BSON::ObjectId('5053a367b9825442b5000325'), BSON::ObjectId('5053a367b9825442b5000326'), BSON::ObjectId('5053a367b9825442b5000327'), BSON::ObjectId('5053a367b9825442b5000328'), BSON::ObjectId('5053a367b9825442b5000329'), BSON::ObjectId('5053a367b9825442b500032a'), BSON::ObjectId('5053a367b9825442b500032b'), BSON::ObjectId('5053a367b9825442b500032c'), BSON::ObjectId('5053a367b9825442b500032d'), BSON::ObjectId('5053a367b9825442b500032e'), BSON::ObjectId('5053a367b9825442b500032f'), BSON::ObjectId('5053a367b9825442b5000330'), BSON::ObjectId('5053a367b9825442b5000331'), BSON::ObjectId('5053a367b9825442b5000332'), BSON::ObjectId('5053a367b9825442b5000333'), BSON::ObjectId('5053a367b9825442b5000334'), BSON::ObjectId('5053a367b9825442b5000335'), BSON::ObjectId('5053a367b9825442b5000336'), BSON::ObjectId('5053a367b9825442b5000337'), BSON::ObjectId('5053a367b9825442b5000338'), BSON::ObjectId('5053a367b9825442b5000339'), BSON::ObjectId('5053a367b9825442b500033a'), BSON::ObjectId('5067781cb982543d7e000369'), BSON::ObjectId('5067781db982543d7e00036a'), BSON::ObjectId('5067781db982543d7e00036b'), BSON::ObjectId('5067781db982543d7e00036c'), BSON::ObjectId('5067781db982543d7e00036d'), BSON::ObjectId('5067781db982543d7e00036e'), BSON::ObjectId('5067781eb982543d7e00036f'), BSON::ObjectId('5067781eb982543d7e000370'), BSON::ObjectId('5067781eb982543d7e000371'), BSON::ObjectId('5067781eb982543d7e000372'), BSON::ObjectId('5067781fb982543d7e000373'), BSON::ObjectId('5067781fb982543d7e000374'), BSON::ObjectId('5067781fb982543d7e000375'), BSON::ObjectId('5067781fb982543d7e000376'), BSON::ObjectId('5067781fb982543d7e000377'), BSON::ObjectId('50677820b982543d7e000378'), BSON::ObjectId('50677820b982543d7e000379'), BSON::ObjectId('50677820b982543d7e00037a'), BSON::ObjectId('50677820b982543d7e00037b'), BSON::ObjectId('50677820b982543d7e00037c'), BSON::ObjectId('50677821b982543d7e00037d'), BSON::ObjectId('50677821b982543d7e00037e'), BSON::ObjectId('50677821b982543d7e00037f'), BSON::ObjectId('50677821b982543d7e000380'), BSON::ObjectId('50677821b982543d7e000381'), BSON::ObjectId('50677822b982543d7e000382'), BSON::ObjectId('50677822b982543d7e000383'), BSON::ObjectId('506ca8c4b982540333000002'), BSON::ObjectId('506ca8c5b982540333000003'), BSON::ObjectId('506ca8c5b982540333000004'), BSON::ObjectId('506ca8c5b982540333000005'), BSON::ObjectId('506ca8c5b982540333000006'), BSON::ObjectId('506ca8c5b982540333000007'), BSON::ObjectId('506ca8c6b982540333000008'), BSON::ObjectId('506ca8c6b982540333000009'), BSON::ObjectId('506ca8c6b98254033300000a'), BSON::ObjectId('506ca8c6b98254033300000b'), BSON::ObjectId('506ca8c6b98254033300000c'), BSON::ObjectId('506ca8c7b98254033300000d'), BSON::ObjectId('506ca8c7b98254033300000e'), BSON::ObjectId('506ca8c7b98254033300000f'), BSON::ObjectId('506ca8c7b982540333000010'), BSON::ObjectId('506ca8c7b982540333000011'), BSON::ObjectId('506ca8c8b982540333000012'), BSON::ObjectId('506ca8c8b982540333000013'), BSON::ObjectId('506ca8c8b982540333000014'), BSON::ObjectId('506ca8c8b982540333000015'), BSON::ObjectId('506ca8c8b982540333000016'), BSON::ObjectId('506ca8c9b982540333000017'), BSON::ObjectId('506ca8c9b982540333000018'), BSON::ObjectId('506ca8c9b982540333000019'), BSON::ObjectId('506ca8c9b98254033300001a'), BSON::ObjectId('506ca8c9b98254033300001b'), BSON::ObjectId('506ca8cab98254033300001c')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('50709f50b982540200000057')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c3b982540200000073')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c4b982540200000074')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c4b982540200000075')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c4b982540200000076')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c5b982540200000077')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c5b982540200000078')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c5b982540200000079')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c5b98254020000007a')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c5b98254020000007b')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c6b98254020000007c')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c6b98254020000007d')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c6b98254020000007e')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c6b98254020000007f')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c7b982540200000080')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c7b982540200000081')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c7b982540200000082')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c7b982540200000083')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c8b982540200000084')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c8b982540200000085')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c8b982540200000086')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c8b982540200000087')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c9b982540200000088')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c9b982540200000089')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1c9b98254020000008a')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1cab98254020000008b')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('5070a1cab98254020000008c')]}})
Completed 500 Internal Server Error in 78766ms

Mongoid::Errors::MixedRelations (Referencing a(n) FacebookEvent document from the FacebookGroup document via a relational association is not allowed since the FacebookEvent is embedded.):
  app/models/group.rb:59:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (21.0ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:29:47 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>451159858257915}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>401882673194419}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101294623351019}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>239150199539216}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>174594792674227}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>278226932257768}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>246134372111144}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>137191673053171}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>193063270745693}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>142677182468299}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>201393349886856}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>195635683783207}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>111560732254568}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>128816703851870}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>130412167024228}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>194806617196345}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101318436612972}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>119413568130746}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>140638829320639}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>122864614439584}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>95842197115}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>68108417380}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>53835742445}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>73004560008}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>44860008542}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>30202072806}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>36107751912}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$set"=>{"event_ids"=>[]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
Completed 500 Internal Server Error in 71519ms

Mongoid::Errors::MixedRelations (Referencing a(n) FacebookEvent document from the FacebookGroup document via a relational association is not allowed since the FacebookEvent is embedded.):
  app/models/group.rb:62:in `update_details'
  app/controllers/groups_controller.rb:70:in `update_details'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (22.9ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:32:45 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (1519.7ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2381ms (Views: 2189.3ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:33:43 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (2066.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3411ms (Views: 2895.1ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:33:49 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (1536.0ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2145ms (Views: 1946.2ms)


Started GET "/groups/502e39a6b982541c5000000e/update_details" for 127.0.0.1 at 2012-10-06 14:34:19 -0700
Processing by GroupsController#update_details as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509773055}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003309420818}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572020282}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002626025799}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002734460256}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501478339}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1834613863}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1232490386}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001744701514}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533203441}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>538571622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>554836153}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533040391}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>526098679}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>516376966}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>518020144}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524060416}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>524620068}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>574634837}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>627135620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>638013596}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>640523775}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>645003609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>607410857}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>606247493}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>576955412}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>593400490}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>594200382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>597410447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512900580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>512733222}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202907405}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>212900324}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500069368}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>193201623}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61308673}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4809710}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>57008121}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61010951}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500400783}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500959653}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>504661190}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508148314}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511448112}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>511836725}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>503775407}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502991166}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501713815}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501964516}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502670227}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655321995}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>662240638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1485284263}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1521709931}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1572314591}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1613880296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1454844534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1158767382}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1248438203}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1352209825}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1399942776}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1638930002}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1678500008}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002553824860}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100002606560393}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100003051758743}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>591081657}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001771256997}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001159931101}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1782447719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000085188330}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000220846638}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000547658385}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1134743698}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702836497}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>703690590}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>705094194}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>707597212}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>699965816}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>679944541}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>694202895}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>698194369}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>709686534}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>715491501}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>773723572}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>818305622}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>852654302}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>767275071}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>745190367}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>718030711}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>719862803}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>720015688}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>728036897}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>690467323}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202908018}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36819259}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>655655146}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1145077580}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1299601012}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>854020569}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>721087814}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509706940}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>222404861}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>564128670}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1737700389}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>733860478}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>702090459}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>602116655}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61016027}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502204579}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>565615901}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>768387517}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1048638131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500424311}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>506349955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500904298}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>500347599}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509142141}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>517014351}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>539803304}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>533351258}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>218101274}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12428}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>12203129}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60501557}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202900181}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>61415559}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>572016295}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1611630023}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1510210333}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1458910629}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1633481930}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000144188644}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1270801531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>641107328}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>632160443}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>651961618}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100001638670705}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>555305786}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>501761420}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>286106589}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>505836147}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>507258511}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>508517947}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>223401609}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>4812740}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202903297}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513647620}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>571362044}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1047066892}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1016733448}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1482358143}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1538359731}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>692115843}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>600310909}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>661599477}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>682289637}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>687223675}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000953559329}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>567935255}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>60502447}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>3630005}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>585435270}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>862840646}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1818664690}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>1376869442}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>100000250667296}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>513705199}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>509367919}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>502834056}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>36820531}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>202902955}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>581681758}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>595853131}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>736910246}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>765465013}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>697756281}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>657315719}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>652132401}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_users'].find({:facebook_id=>783408233}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>451159858257915}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>401882673194419}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101294623351019}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>239150199539216}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>174594792674227}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>278226932257768}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>246134372111144}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>137191673053171}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>193063270745693}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>142677182468299}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>201393349886856}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>195635683783207}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>111560732254568}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>128816703851870}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>130412167024228}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>194806617196345}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>101318436612972}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>119413568130746}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>140638829320639}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>122864614439584}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>95842197115}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>68108417380}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>53835742445}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>73004560008}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>44860008542}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>30202072806}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.facebook_id"=>36107751912}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$set"=>{"event_ids"=>[]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}, {"$pushAll"=>{"event_ids"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered text template (0.0ms)
Completed 200 OK in 73492ms (Views: 5.6ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:35:56 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (1785.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2573ms (Views: 2366.3ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:36:43 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (1171.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2076ms (Views: 1733.8ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 14:48:05 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['facebook_groups'].find({"group_id"=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[BSON::ObjectId('50709f50b982540200000057'), BSON::ObjectId('5070a1c3b982540200000073'), BSON::ObjectId('5070a1c4b982540200000074'), BSON::ObjectId('5070a1c4b982540200000075'), BSON::ObjectId('5070a1c4b982540200000076'), BSON::ObjectId('5070a1c5b982540200000077'), BSON::ObjectId('5070a1c5b982540200000078'), BSON::ObjectId('5070a1c5b982540200000079'), BSON::ObjectId('5070a1c5b98254020000007a'), BSON::ObjectId('5070a1c5b98254020000007b'), BSON::ObjectId('5070a1c6b98254020000007c'), BSON::ObjectId('5070a1c6b98254020000007d'), BSON::ObjectId('5070a1c6b98254020000007e'), BSON::ObjectId('5070a1c6b98254020000007f'), BSON::ObjectId('5070a1c7b982540200000080'), BSON::ObjectId('5070a1c7b982540200000081'), BSON::ObjectId('5070a1c7b982540200000082'), BSON::ObjectId('5070a1c7b982540200000083'), BSON::ObjectId('5070a1c8b982540200000084'), BSON::ObjectId('5070a1c8b982540200000085'), BSON::ObjectId('5070a1c8b982540200000086'), BSON::ObjectId('5070a1c8b982540200000087'), BSON::ObjectId('5070a1c9b982540200000088'), BSON::ObjectId('5070a1c9b982540200000089'), BSON::ObjectId('5070a1c9b98254020000008a'), BSON::ObjectId('5070a1cab98254020000008b'), BSON::ObjectId('5070a1cab98254020000008c')]}})
  Rendered groups/show.html.erb within layouts/application (3163.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 4191ms (Views: 3992.6ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-06 15:53:55 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
Completed 500 Internal Server Error in 232609ms

Mongo::ConnectionFailure (Operation failed with the following exception: Operation timed out):
  app/controllers/groups_controller.rb:16:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.7ms)


Started GET "/groups/502e39a6b982541c5000000e" for 127.0.0.1 at 2012-10-07 10:52:31 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"502e39a6b982541c5000000e"}
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"6e4c88c169217d3b", "key"=>"48865c184d6bfab27a5ecbbdcfe60511"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('502e39a6b982541c5000000e')}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 2163ms

Mongoid::Errors::DocumentNotFound (Document not found for class Group with id(s) 502e39a6b982541c5000000e.):
  app/controllers/groups_controller.rb:16:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (21.1ms)


Started GET "/" for 127.0.0.1 at 2012-10-07 10:52:40 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
  Rendered networks/index.html.erb within layouts/application (1256.6ms)
Completed 200 OK in 1268ms (Views: 1267.2ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 10:52:43 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-07 10:52:43 -0700, "$lt"=>2012-10-08 10:52:43 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-07 10:52:43 -0700, "$lt"=>2012-10-08 10:52:43 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (567.2ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1360ms (Views: 1131.6ms)


Started GET "/groups/" for 127.0.0.1 at 2012-10-07 10:52:52 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
  Rendered groups/index.html.erb within layouts/application (198.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 758ms (Views: 758.0ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:29:07 -0700

Mongoid::Errors::InvalidOptions (Invalid option :autosave provided to relation :facebook_group. Valid options are: as, cascade_callbacks, cyclic, class_name, extend, inverse_class_name, inverse_of, name, relation, validate.):
  app/models/group.rb:4:in `<class:Group>'
  app/models/group.rb:1:in `<top (required)>'
  app/controllers/groups_controller.rb:1:in `<top (required)>'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (23.5ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:31:31 -0700

Mongoid::Errors::InvalidOptions (Invalid option :autosave provided to relation :facebook_group. Valid options are: as, cascade_callbacks, cyclic, class_name, extend, inverse_class_name, inverse_of, name, relation, validate.):
  app/models/group.rb:4:in `<class:Group>'
  app/models/group.rb:1:in `<top (required)>'
  app/controllers/groups_controller.rb:1:in `<top (required)>'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.2ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:31:56 -0700

Mongoid::Errors::InvalidOptions (Invalid option :autosave provided to relation :facebook_group. Valid options are: as, cascade_callbacks, cyclic, class_name, extend, inverse_class_name, inverse_of, name, relation, validate.):
  app/models/group.rb:4:in `<class:Group>'
  app/models/group.rb:1:in `<top (required)>'
  app/controllers/groups_controller.rb:1:in `<top (required)>'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.2ms)
MongoDB logging. Please note that logging negatively impacts performance and should be disabled for high-performance production apps.
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"be5c1f1d174c7fde", "key"=>"d3e1d8b392e0864aef304aa6c6f5e030"})
MONGODB admin['$cmd'].find({:ismaster=>1})
MONGODB near_io_dev['$cmd'].find({:getnonce=>1})
MONGODB near_io_dev['$cmd'].find({"authenticate"=>1, "user"=>"dev", "nonce"=>"8921e37186ceaa94", "key"=>"3fc01bc0bf88e9b530a757ff069eaa58"})
Starting the New Relic Agent.
NewRelic Agent Developer Mode enabled.
To view performance information, go to http://localhost:3000/newrelic


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:32:10 -0700

Mongoid::Errors::InvalidOptions (Invalid option :autosave provided to relation :facebook_group. Valid options are: as, cascade_callbacks, cyclic, class_name, extend, inverse_class_name, inverse_of, name, relation, validate.):
  app/models/group.rb:4:in `<class:Group>'
  app/models/group.rb:1:in `<top (required)>'
  app/controllers/groups_controller.rb:1:in `<top (required)>'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (4.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (4.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (26.7ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:32:12 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (22.6ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:33:21 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.9ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:33:22 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (21.6ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:33:22 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (22.1ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:33:22 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.8ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:33:22 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.8ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:33:32 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (54.7ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:33:33 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (21.9ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:33:33 -0700

NoMethodError (undefined method `key?' for nil:NilClass):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (22.1ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:34:01 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
  Rendered groups/index.html.erb within layouts/application (527.5ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1427ms (Views: 1426.1ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:34:06 -0700
Processing by GroupsController#new as HTML
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (731.5ms)
  Rendered groups/new.html.erb within layouts/application (734.2ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1390ms (Views: 1316.0ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 14:39:17 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"UCLUnion", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Completed 500 Internal Server Error in 568ms

Mongoid::Errors::InvalidCollection (Access to the collection for FacebookPage is not allowed since it is an embedded document, please access a collection from the root document.):
  app/models/facebook_page.rb:43:in `get_by_hash'
  app/models/facebook_page.rb:24:in `find_by_facebook_id'
  app/controllers/groups_controller.rb:53:in `create'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.0ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 14:42:44 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"UCLUnion", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].insert([{"event_ids"=>[], "network_ids"=>[], "_id"=>BSON::ObjectId('5071f754b982541549000004'), "facebook_page"=>{"_id"=>BSON::ObjectId('5071f754b982541549000005'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>259, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6693}}])
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 690ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:42:45 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (895.2ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1845ms (Views: 1655.5ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:47:35 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
  Rendered groups/index.html.erb within layouts/application (382.6ms)
Completed 500 Internal Server Error in 386ms

ActionView::Template::Error (undefined method `networks' for #<Group:0x007fc15cbcf780>):
    9:   <tr>
    10:     <td><%= link_to group.name, group %></td>
    11:     <td>
    12:       <% group.networks.each do |network| %>
    13:         <%= link_to network.name, network %>
    14:       <% end %>
    15:     </td>
  app/views/groups/index.html.erb:12:in `block in _app_views_groups_index_html_erb__4296813498537779167_70234218445360'
  app/views/groups/index.html.erb:8:in `_app_views_groups_index_html_erb__4296813498537779167_70234218445360'
  app/controllers/groups_controller.rb:7:in `index'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (19.0ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:47:40 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
  Rendered groups/index.html.erb within layouts/application (184.4ms)
Completed 500 Internal Server Error in 187ms

ActionView::Template::Error (undefined method `networks' for #<Group:0x007fc15b480908>):
    9:   <tr>
    10:     <td><%= link_to group.name, group %></td>
    11:     <td>
    12:       <% group.networks.each do |network| %>
    13:         <%= link_to network.name, network %>
    14:       <% end %>
    15:     </td>
  app/views/groups/index.html.erb:12:in `block in _app_views_groups_index_html_erb__4296813498537779167_70234218445360'
  app/views/groups/index.html.erb:8:in `_app_views_groups_index_html_erb__4296813498537779167_70234218445360'
  app/controllers/groups_controller.rb:7:in `index'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (18.3ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:48:12 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (795.3ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1577ms (Views: 1576.4ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 14:48:31 -0700
Processing by GroupsController#new as HTML
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (2147.9ms)
  Rendered groups/new.html.erb within layouts/application (2149.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 4038ms (Views: 3984.8ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 14:48:43 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"2368509106", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].insert([{"event_ids"=>[], "network_ids"=>[], "_id"=>BSON::ObjectId('5071f8bbb982541549000007'), "facebook_group"=>{"_id"=>BSON::ObjectId('5071f8bbb982541549000008'), "facebook_id"=>2368509106, "name"=>"UCL Enterprise Society", "description"=>"THE ENTERPRISE: \n\nOur mission is to inspire and feed all entrepreneurial activity within the UCL community. \n\nFIND OUT MORE... http://groupspaces.com/uclenterprise/external/subscribe\n\nWe are non-profit student-run group of crazed life enthusiasts. This 2011-12 we are creating events that will:\n\n- open your eyes to the start-up scene in London\n- give you the opportunity to meet like-minded individuals you could potentially form companies with\n- provide you with free mentoring, training, guidance. A wealth of resources to hep you on your journey.\n- look great on your CV and impress any future potential employers (and lovers)\n- give you FREE PIZZA AND BEER!\n\n\nBE THE BOSS. BE THE FUTURE'S PROBLEM-SOLVER.", "privacy"=>nil, "icon"=>"http://static.ak.fbcdn.net/rsrc.php/v2/yI/r/0pjqWL1NfkE.png", "email"=>"2368509106@groups.facebook.com", "updated_time"=>2012-10-06 00:00:00 UTC}}])
Redirected to http://localhost:3000/groups/5071f8bbb982541549000007
Completed 302 Found in 546ms


Started GET "/groups/5071f8bbb982541549000007" for 127.0.0.1 at 2012-10-07 14:48:43 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f8bbb982541549000007"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f8bbb982541549000007')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (589.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1810ms (Views: 1624.9ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:48:55 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (598.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1357ms (Views: 1356.4ms)


Started GET "/groups/5071f754b982541549000004/edit" for 127.0.0.1 at 2012-10-07 14:48:59 -0700
Processing by GroupsController#edit as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (925.4ms)
  Rendered groups/edit.html.erb within layouts/application (928.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2016ms (Views: 1815.7ms)


Started PUT "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:49:03 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 560ms

NoMethodError (undefined method `metadata' for "":String):
  app/controllers/groups_controller.rb:101:in `block in update'
  app/controllers/groups_controller.rb:100:in `update'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.5ms)


Started PUT "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:52:20 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"facebook_page"=>{"_id"=>BSON::ObjectId('5071f996b98254154900000a'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>259, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6694}}})
Completed 500 Internal Server Error in 1408ms

NoMethodError (undefined method `metadata' for "":String):
  app/controllers/groups_controller.rb:108:in `block in update'
  app/controllers/groups_controller.rb:107:in `update'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.7ms)


Started PUT "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:53:30 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 1290ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:53:31 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (919.1ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2128ms (Views: 1823.1ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:53:36 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (750.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1517ms (Views: 1516.2ms)


Started GET "/groups/5071f754b982541549000004/edit" for 127.0.0.1 at 2012-10-07 14:53:40 -0700
Processing by GroupsController#edit as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (554.6ms)
  Rendered groups/edit.html.erb within layouts/application (556.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1526ms (Views: 1218.3ms)


Started PUT "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:53:43 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 964ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:53:44 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (515.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1297ms (Views: 1105.7ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:53:47 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (800.1ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1612ms (Views: 1611.6ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 14:59:47 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (1081.1ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2929ms (Views: 2928.7ms)


Started GET "/groups/5071f754b982541549000004/edit" for 127.0.0.1 at 2012-10-07 14:59:51 -0700
Processing by GroupsController#edit as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (915.3ms)
  Rendered groups/edit.html.erb within layouts/application (918.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2110ms (Views: 1611.5ms)


Started PUT "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:59:56 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5071f754b982541549000004')}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"network_ids"=>[]}})
MONGODB near_io_dev['networks'].update({"_id"=>BSON::ObjectId('506c8c45b982540a65000005')}, {"$addToSet"=>{"group_ids"=>{"$each"=>[BSON::ObjectId('5071f754b982541549000004')]}}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$pushAll"=>{"network_ids"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"facebook_page"=>{"_id"=>BSON::ObjectId('5071fb5eb98254154900000d'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>269, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6692}}})
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 2196ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 14:59:58 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (727.1ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2073ms (Views: 1844.6ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 15:00:05 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
  Rendered groups/index.html.erb within layouts/application (786.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1728ms (Views: 1727.5ms)


Started GET "/groups/5071f8bbb982541549000007/edit" for 127.0.0.1 at 2012-10-07 15:00:09 -0700
Processing by GroupsController#edit as HTML
  Parameters: {"id"=>"5071f8bbb982541549000007"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f8bbb982541549000007')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (686.3ms)
  Rendered groups/edit.html.erb within layouts/application (689.1ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1479ms (Views: 1259.4ms)


Started PUT "/groups/5071f8bbb982541549000007" for 127.0.0.1 at 2012-10-07 15:00:13 -0700
Processing by GroupsController#update as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"2368509106", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Update Group", "id"=>"5071f8bbb982541549000007"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f8bbb982541549000007')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5071f8bbb982541549000007')}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f8bbb982541549000007')}, {"$set"=>{"network_ids"=>[]}})
MONGODB near_io_dev['networks'].update({"_id"=>BSON::ObjectId('506c8c45b982540a65000005')}, {"$addToSet"=>{"group_ids"=>{"$each"=>[BSON::ObjectId('5071f8bbb982541549000007')]}}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f8bbb982541549000007')}, {"$pushAll"=>{"network_ids"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f8bbb982541549000007')}, {"$set"=>{"facebook_group"=>{"_id"=>BSON::ObjectId('5071fb6eb98254154900000e'), "facebook_id"=>2368509106, "name"=>"UCL Enterprise Society", "description"=>"THE ENTERPRISE: \n\nOur mission is to inspire and feed all entrepreneurial activity within the UCL community. \n\nFIND OUT MORE... http://groupspaces.com/uclenterprise/external/subscribe\n\nWe are non-profit student-run group of crazed life enthusiasts. This 2011-12 we are creating events that will:\n\n- open your eyes to the start-up scene in London\n- give you the opportunity to meet like-minded individuals you could potentially form companies with\n- provide you with free mentoring, training, guidance. A wealth of resources to hep you on your journey.\n- look great on your CV and impress any future potential employers (and lovers)\n- give you FREE PIZZA AND BEER!\n\n\nBE THE BOSS. BE THE FUTURE'S PROBLEM-SOLVER.", "privacy"=>nil, "icon"=>"http://static.ak.fbcdn.net/rsrc.php/v2/yI/r/0pjqWL1NfkE.png", "email"=>"2368509106@groups.facebook.com", "updated_time"=>2012-10-06 00:00:00 UTC}}})
Redirected to http://localhost:3000/groups/5071f8bbb982541549000007
Completed 302 Found in 766ms


Started GET "/groups/5071f8bbb982541549000007" for 127.0.0.1 at 2012-10-07 15:00:14 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f8bbb982541549000007"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f8bbb982541549000007')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (387.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1207ms (Views: 966.5ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 15:00:17 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (581.0ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1205ms (Views: 1205.1ms)


Started GET "/" for 127.0.0.1 at 2012-10-07 16:13:57 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
  Rendered networks/index.html.erb within layouts/application (2013.3ms)
Completed 200 OK in 2024ms (Views: 2023.3ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:14:15 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-07 16:14:15 -0700, "$lt"=>2012-10-08 16:14:15 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-07 16:14:15 -0700, "$lt"=>2012-10-08 16:14:15 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (761.1ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1985ms (Views: 1479.8ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:14:19 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-08 00:00:00 -0700, "$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-08 00:00:00 -0700, "$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (563.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1708ms (Views: 1496.1ms)


Started GET "/networks/ucl/2012/10/07" for 127.0.0.1 at 2012-10-07 16:14:22 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"07"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-07 00:00:00 -0700, "$lt"=>2012-10-08 00:00:00 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-07 00:00:00 -0700, "$lt"=>2012-10-08 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (424.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1411ms (Views: 1079.8ms)


Started GET "/networks/ucl/2012/10/07" for 127.0.0.1 at 2012-10-07 16:14:46 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"07"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({})
  Rendered networks/show.html.erb within layouts/application (1129.8ms)
Completed 500 Internal Server Error in 1551ms

ActionView::Template::Error (can't convert nil into an exact number):
    11:   <div class="accordion-group">
    12:     <div class="accordion-heading">
    13:         <a class="accordion-toggle clearfix" data-toggle="collapse" href="#<%= event.id %>">
    14:             <span class="pull-left"><%= event.name unless event.nil? %></span><span class="pull-right">In <%= distance_of_time_in_words_to_now(event.start_time) %></span>
    15:         </a>
    16:     </div>
    17:     <div id="<%= event.id %>" class="accordion-body collapse">
  app/views/networks/show.html.erb:14:in `block in _app_views_networks_show_html_erb__4384877225760385608_70234235509540'
  app/views/networks/show.html.erb:10:in `_app_views_networks_show_html_erb__4384877225760385608_70234235509540'
  app/controllers/networks_controller.rb:38:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.7ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (22.1ms)


Started GET "/networks/ucl/2012/10/07" for 127.0.0.1 at 2012-10-07 16:18:04 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"07"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB cursor.close 4518598899740793870
MONGODB near_io_dev['events'].find({}).limit(25)
  Rendered networks/show.html.erb within layouts/application (806.5ms)
Completed 500 Internal Server Error in 1201ms

ActionView::Template::Error (can't convert nil into an exact number):
    11:   <div class="accordion-group">
    12:     <div class="accordion-heading">
    13:         <a class="accordion-toggle clearfix" data-toggle="collapse" href="#<%= event.id %>">
    14:             <span class="pull-left"><%= event.name unless event.nil? %></span><span class="pull-right">In <%= distance_of_time_in_words_to_now(event.start_time) %></span>
    15:         </a>
    16:     </div>
    17:     <div id="<%= event.id %>" class="accordion-body collapse">
  app/views/networks/show.html.erb:14:in `block in _app_views_networks_show_html_erb__4384877225760385608_70234235509540'
  app/views/networks/show.html.erb:10:in `_app_views_networks_show_html_erb__4384877225760385608_70234235509540'
  app/controllers/networks_controller.rb:38:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (20.7ms)


Started GET "/networks/ucl/2012/10/07" for 127.0.0.1 at 2012-10-07 16:18:50 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"07"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB cursor.close 5246687987756305861
MONGODB near_io_dev['events'].find({}).limit(25)
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (997.5ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1836ms (Views: 1640.4ms)


Started GET "/networks/ucl/2012/10/07" for 127.0.0.1 at 2012-10-07 16:19:14 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"07"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-07 00:00:00 -0700, "$lt"=>2012-10-08 00:00:00 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-07 00:00:00 -0700, "$lt"=>2012-10-08 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (644.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2105ms (Views: 1679.5ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:20:30 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({:start_time=>{"$gt"=>2012-10-07 16:20:30 -0700, "$lt"=>2012-10-08 16:20:30 -0700}}).limit(25).sort([[:start_time, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:start_time=>{"$gt"=>2012-10-07 16:20:30 -0700, "$lt"=>2012-10-08 16:20:30 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (514.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1408ms (Views: 1190.2ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:20:49 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 444ms

NoMethodError (undefined method `facebook_event' for Event:Class):
  app/controllers/networks_controller.rb:26:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (19.5ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:21:14 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 386ms

NoMethodError (undefined method `facebook_event' for Event:Class):
  app/controllers/networks_controller.rb:26:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.6ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (20.9ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:22:14 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 504ms

NoMethodError (undefined method `facebook_event' for Event:Class):
  app/controllers/networks_controller.rb:26:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.4ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.0ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.9ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:22:45 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 520ms

NoMethodError (undefined method `facebook_event' for Event:Class):
  app/controllers/networks_controller.rb:26:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.2ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (16.5ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:23:43 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
Completed 500 Internal Server Error in 517ms

NoMethodError (undefined method `start_time' for :facebook_event:Symbol):
  app/controllers/networks_controller.rb:26:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.3ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:24:10 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-07 16:24:10 -0700, "facebook_event.start_time.lt"=>2012-10-08 16:24:10 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-07 16:24:10 -0700, "facebook_event.start_time.lt"=>2012-10-08 16:24:10 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (790.8ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2173ms (Views: 1631.5ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:24:15 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-08 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-09 00:00:00 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-08 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-09 00:00:00 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (430.7ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1344ms (Views: 1144.2ms)


Started GET "/networks/ucl/2012/10/09" for 127.0.0.1 at 2012-10-07 16:24:17 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"09"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-09 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-10 00:00:00 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-09 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-10 00:00:00 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (444.6ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1254ms (Views: 1039.0ms)


Started GET "/networks/ucl/2012/10/10" for 127.0.0.1 at 2012-10-07 16:24:20 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"10"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-10 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-11 00:00:00 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-10 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-11 00:00:00 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (380.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1168ms (Views: 973.9ms)


Started GET "/networks/ucl/2012/10/11" for 127.0.0.1 at 2012-10-07 16:24:23 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"11"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-11 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-12 00:00:00 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-11 00:00:00 -0700, "facebook_event.start_time.lt"=>2012-10-12 00:00:00 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (482.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1376ms (Views: 1164.8ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:29:08 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time.gt"=>2012-10-07 16:29:08 -0700, "facebook_event.start_time.lt"=>2012-10-08 16:29:08 -0700}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time.gt"=>2012-10-07 16:29:08 -0700, "facebook_event.start_time.lt"=>2012-10-08 16:29:08 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (384.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1161ms (Views: 972.1ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:32:57 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:32:57 -0700}}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:32:57 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1345.5ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2904ms (Views: 2322.9ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:34:02 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1022.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1797ms (Views: 1606.1ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:34:26 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (579.6ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3262ms (Views: 2861.3ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:34:35 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1451.1ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2655ms (Views: 2250.9ms)


Started GET "/networks/ucl/2012/10/08?page=2" for 127.0.0.1 at 2012-10-07 16:34:46 -0700
Processing by NetworksController#show as HTML
  Parameters: {"page"=>"2", "id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).skip(25).limit(25).sort([["facebook_event.start_time", :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (402.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1248ms (Views: 997.0ms)


Started GET "/networks/ucl/2012/10/08?page=2" for 127.0.0.1 at 2012-10-07 16:34:55 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"page"=>"2", "id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).skip(25).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (640.4ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1834ms (Views: 1439.6ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:34:58 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1018.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1716ms (Views: 1501.5ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:41:46 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
  Rendered networks/show.html.erb within layouts/application (779.8ms)
Completed 500 Internal Server Error in 976ms

ActionView::Template::Error (undefined method `facebook_event?' for #<Event _id: 50709f50b982540200000057, _type: nil>):
    16:     </div>
    17:     <div id="<%= event.id %>" class="accordion-body collapse">
    18:       <div class="accordion-inner">
    19:         <p><%= event.facebook_event?.description unless event.facebook_event?.description.nil? %></p>
    20:       </div>
    21:     </div>
    22:   </div>
  app/views/networks/show.html.erb:19:in `block in _app_views_networks_show_html_erb__4384877225760385608_70234235359260'
  app/views/networks/show.html.erb:10:in `_app_views_networks_show_html_erb__4384877225760385608_70234235359260'
  app/controllers/networks_controller.rb:38:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (1.5ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (23.8ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:41:51 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
  Rendered networks/show.html.erb within layouts/application (762.2ms)
Completed 500 Internal Server Error in 1031ms

ActionView::Template::Error (undefined method `facebook_event?' for #<Event _id: 50709f50b982540200000057, _type: nil>):
    16:     </div>
    17:     <div id="<%= event.id %>" class="accordion-body collapse">
    18:       <div class="accordion-inner">
    19:         <p><%= event.facebook_event.description unless event.facebook_event?.description.nil? %></p>
    20:       </div>
    21:     </div>
    22:   </div>
  app/views/networks/show.html.erb:19:in `block in _app_views_networks_show_html_erb__4384877225760385608_70234272721140'
  app/views/networks/show.html.erb:10:in `_app_views_networks_show_html_erb__4384877225760385608_70234272721140'
  app/controllers/networks_controller.rb:38:in `show'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (3.1ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/template_error.erb within rescues/layout (17.7ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:42:56 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1041.2ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2254ms (Views: 1853.9ms)


Started GET "/networks/ucl/2012/10/08" for 127.0.0.1 at 2012-10-07 16:44:08 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl", "year"=>"2012", "month"=>"10", "day"=>"08"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-09 00:00:00 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1197.4ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2258ms (Views: 1862.8ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:44:26 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:44:26 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:44:26 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (981.1ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1565ms (Views: 1370.8ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:45:08 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>2012-10-07 16:45:08 -0700}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>2012-10-07 16:45:08 -0700}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (574.7ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1787ms (Views: 1403.9ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:46:19 -0700

SyntaxError (/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting ')'
...e('facebook_event.start_time' : {'$gt' => @date}, 'facebook_...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ',', expecting keyword_end
...start_time' : {'$gt' => @date}, 'facebook_event.start_time' ...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting keyword_end
..., 'facebook_event.start_time' : {'$lt' => (@date+1.day)}).de...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ')', expecting keyword_end
...me' : {'$lt' => (@date+1.day)}).desc('facebook_event.start_t...
...                               ^):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.3ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.8ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.0ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:46:31 -0700

SyntaxError (/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting ')'
...e('facebook_event.start_time' : {'$gt' : @date}, 'facebook_e...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting tASSOC
...ok_event.start_time' : {'$gt' : @date}, 'facebook_event.star...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected tASSOC, expecting keyword_end
... 'facebook_event.start_time' => {'$lt' : (@date+1.day)}).des...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting tASSOC
...k_event.start_time' => {'$lt' : (@date+1.day)}).desc('facebo...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected '}', expecting keyword_end
...ime' => {'$lt' : (@date+1.day)}).desc('facebook_event.start_...
...                               ^):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.0ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:46:36 -0700

SyntaxError (/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting ')'
...e('facebook_event.start_time' : {'$gt' : @date}, 'facebook_e...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting tASSOC
...ok_event.start_time' : {'$gt' : @date}, 'facebook_event.star...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting keyword_end
..., 'facebook_event.start_time' : {'$lt' : (@date+1.day)}).des...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected ':', expecting tASSOC
...ok_event.start_time' : {'$lt' : (@date+1.day)}).desc('facebo...
...                               ^
/Users/maize/Projects/nearnote-api/app/controllers/networks_controller.rb:27: syntax error, unexpected '}', expecting keyword_end
...time' : {'$lt' : (@date+1.day)}).desc('facebook_event.start_...
...                               ^):
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (1.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (17.8ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:46:43 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:46:44 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:46:44 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1164.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2157ms (Views: 1764.0ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:47:04 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:47:04 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:47:04 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (578.7ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1943ms (Views: 1548.9ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:47:50 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:47:51 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$lt"=>2012-10-08 16:47:51 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (1444.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3195ms (Views: 2532.3ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:48:12 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:48:13 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:48:13 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (584.5ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2631ms (Views: 1816.8ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:48:49 -0700
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:48:49 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:48:49 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (390.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1166ms (Views: 976.4ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:52:04 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:52:05 -0700, "$lt"=>2012-10-08 16:52:05 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:52:05 -0700, "$lt"=>2012-10-08 16:52:05 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (572.0ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1848ms (Views: 1460.5ms)


Started GET "/networks/ucl" for 127.0.0.1 at 2012-10-07 16:52:16 -0700
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
Processing by NetworksController#show as HTML
  Parameters: {"id"=>"ucl"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:slug=>"ucl"}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['events'].find({"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:52:17 -0700, "$lt"=>2012-10-08 16:52:17 -0700}}).limit(25).sort([["facebook_event.start_time", :desc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{"facebook_event.start_time"=>{"$gt"=>2012-10-07 16:52:17 -0700, "$lt"=>2012-10-08 16:52:17 -0700}}, "fields"=>nil})
  Rendered networks/show.html.erb within layouts/application (585.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1760ms (Views: 1388.7ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 16:58:18 -0700
Processing by GroupsController#new as HTML
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (992.2ms)
  Rendered groups/new.html.erb within layouts/application (994.0ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1873ms (Views: 1807.4ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 16:58:23 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (797.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1386ms (Views: 1385.4ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 16:58:36 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"2368509106", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
Completed 500 Internal Server Error in 463ms

NoMethodError (undefined method `to_i' for BSON::ObjectId('5072172db982541549000011'):BSON::ObjectId):
  app/controllers/groups_controller.rb:48:in `create'
  config/initializers/quiet_assets.rb:7:in `call_with_quiet_assets'


  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_trace.erb (2.7ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/_request_and_response.erb (0.9ms)
  Rendered /Users/maize/.rvm/gems/ruby-1.9.3-p194/gems/actionpack-3.2.3/lib/action_dispatch/middleware/templates/rescues/diagnostics.erb within rescues/layout (18.7ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 16:59:57 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"2368509106", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({"facebook_group.facebook_id"=>BSON::ObjectId('5072177db982541549000013')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5072177eb982541549000014')}})
MONGODB near_io_dev['groups'].insert([{"event_ids"=>[], "network_ids"=>[BSON::ObjectId('506c8c45b982540a65000005')], "_id"=>BSON::ObjectId('5072177eb982541549000014'), "facebook_group"=>{"_id"=>BSON::ObjectId('5072177db982541549000013'), "facebook_id"=>2368509106, "name"=>"UCL Enterprise Society", "description"=>"THE ENTERPRISE: \n\nOur mission is to inspire and feed all entrepreneurial activity within the UCL community. \n\nFIND OUT MORE... http://groupspaces.com/uclenterprise/external/subscribe\n\nWe are non-profit student-run group of crazed life enthusiasts. This 2011-12 we are creating events that will:\n\n- open your eyes to the start-up scene in London\n- give you the opportunity to meet like-minded individuals you could potentially form companies with\n- provide you with free mentoring, training, guidance. A wealth of resources to hep you on your journey.\n- look great on your CV and impress any future potential employers (and lovers)\n- give you FREE PIZZA AND BEER!\n\n\nBE THE BOSS. BE THE FUTURE'S PROBLEM-SOLVER.", "privacy"=>nil, "icon"=>"http://static.ak.fbcdn.net/rsrc.php/v2/yI/r/0pjqWL1NfkE.png", "email"=>"2368509106@groups.facebook.com", "updated_time"=>2012-10-06 00:00:00 UTC}}])
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, {"$addToSet"=>{"group_ids"=>BSON::ObjectId('5072177eb982541549000014')}})
Redirected to http://localhost:3000/groups/5072177eb982541549000014
Completed 302 Found in 1590ms


Started GET "/groups/5072177eb982541549000014" for 127.0.0.1 at 2012-10-07 16:59:58 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5072177eb982541549000014"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5072177eb982541549000014')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (886.1ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2210ms (Views: 2016.9ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:02:28 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({})
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (1336.0ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2187ms (Views: 2186.5ms)


Started DELETE "/groups/5072177eb982541549000014" for 127.0.0.1 at 2012-10-07 17:02:36 -0700
Processing by GroupsController#destroy as HTML
  Parameters: {"authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "id"=>"5072177eb982541549000014"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5072177eb982541549000014')}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].remove({:_id=>BSON::ObjectId('5072177eb982541549000014')})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5072177eb982541549000014')}})
Redirected to http://localhost:3000/groups
Completed 302 Found in 197ms


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:02:36 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (639.6ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1235ms (Views: 1235.1ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 17:02:51 -0700
Processing by GroupsController#new as HTML
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (610.1ms)
  Rendered groups/new.html.erb within layouts/application (612.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1214ms (Views: 1203.2ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 17:02:55 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"2368509106", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_group.facebook_id"=>2368509106}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f8bbb982541549000007')}, {"$set"=>{"facebook_group"=>{"_id"=>BSON::ObjectId('5072182fb982541549000017'), "facebook_id"=>2368509106, "name"=>"UCL Enterprise Society", "description"=>"THE ENTERPRISE: \n\nOur mission is to inspire and feed all entrepreneurial activity within the UCL community. \n\nFIND OUT MORE... http://groupspaces.com/uclenterprise/external/subscribe\n\nWe are non-profit student-run group of crazed life enthusiasts. This 2011-12 we are creating events that will:\n\n- open your eyes to the start-up scene in London\n- give you the opportunity to meet like-minded individuals you could potentially form companies with\n- provide you with free mentoring, training, guidance. A wealth of resources to hep you on your journey.\n- look great on your CV and impress any future potential employers (and lovers)\n- give you FREE PIZZA AND BEER!\n\n\nBE THE BOSS. BE THE FUTURE'S PROBLEM-SOLVER.", "privacy"=>nil, "icon"=>"http://static.ak.fbcdn.net/rsrc.php/v2/yI/r/0pjqWL1NfkE.png", "email"=>"2368509106@groups.facebook.com", "updated_time"=>2012-10-06 00:00:00 UTC}}})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
Redirected to http://localhost:3000/groups/5071f8bbb982541549000007
Completed 302 Found in 780ms


Started GET "/groups/5071f8bbb982541549000007" for 127.0.0.1 at 2012-10-07 17:02:56 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f8bbb982541549000007"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f8bbb982541549000007')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (575.8ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1409ms (Views: 1218.7ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:03:02 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (586.2ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1177ms (Views: 1176.4ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 17:03:14 -0700
Processing by GroupsController#new as HTML
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (582.3ms)
  Rendered groups/new.html.erb within layouts/application (583.6ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1422ms (Views: 1422.1ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 17:03:22 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"UCLUnion", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_page.facebook_id"=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"facebook_page"=>{"_id"=>BSON::ObjectId('5072184ab98254154900001a'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>259, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6693}}})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 705ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 17:03:23 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (386.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1169ms (Views: 977.2ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:03:25 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (570.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1163ms (Views: 1163.0ms)


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 17:03:29 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (423.0ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1260ms (Views: 1007.2ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:03:32 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (578.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1165ms (Views: 1165.0ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 17:03:34 -0700
Processing by GroupsController#new as HTML
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (564.9ms)
  Rendered groups/new.html.erb within layouts/application (566.7ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1209ms (Views: 1208.5ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 17:03:39 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"UCLUnion", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_group.facebook_id"=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5072185bb98254154900001e')}})
MONGODB near_io_dev['groups'].insert([{"event_ids"=>[], "network_ids"=>[BSON::ObjectId('506c8c45b982540a65000005')], "_id"=>BSON::ObjectId('5072185bb98254154900001e'), "facebook_group"=>{"_id"=>BSON::ObjectId('5072185bb98254154900001d'), "facebook_id"=>34994060032, "name"=>"UCL Union", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "privacy"=>nil, "icon"=>nil, "email"=>nil, "updated_time"=>nil}}])
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, {"$addToSet"=>{"group_ids"=>BSON::ObjectId('5072185bb98254154900001e')}})
Redirected to http://localhost:3000/groups/5072185bb98254154900001e
Completed 302 Found in 704ms


Started GET "/groups/5072185bb98254154900001e" for 127.0.0.1 at 2012-10-07 17:03:40 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5072185bb98254154900001e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5072185bb98254154900001e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (469.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1261ms (Views: 1067.9ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:03:48 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (787.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1380ms (Views: 1380.1ms)


Started DELETE "/groups/5072185bb98254154900001e" for 127.0.0.1 at 2012-10-07 17:04:21 -0700
Processing by GroupsController#destroy as HTML
  Parameters: {"authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "id"=>"5072185bb98254154900001e"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5072185bb98254154900001e')}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].remove({:_id=>BSON::ObjectId('5072185bb98254154900001e')})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('5072185bb98254154900001e')}})
Redirected to http://localhost:3000/groups
Completed 302 Found in 606ms


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:04:22 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (578.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1736ms (Views: 1736.1ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 17:13:15 -0700
Processing by GroupsController#new as HTML
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (778.1ms)
  Rendered groups/new.html.erb within layouts/application (779.9ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1664ms (Views: 1642.6ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 17:13:23 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"UCLUnion", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({"facebook_group.facebook_id"=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('50721aa3b982541549000022')}})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (397.9ms)
  Rendered groups/new.html.erb within layouts/application (399.4ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2351ms (Views: 1034.6ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 17:13:39 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"34994060032", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_page.facebook_id"=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"facebook_page"=>{"_id"=>BSON::ObjectId('50721ab3b982541549000024'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>259, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6695}}})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 720ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 17:13:40 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (584.7ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1373ms (Views: 1183.4ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:13:43 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (581.0ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1181ms (Views: 1180.7ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 17:16:30 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (581.3ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 1181ms (Views: 1181.2ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 18:13:48 -0700
Processing by GroupsController#new as HTML
DEPRECATION WARNING: The InstanceMethods module inside ActiveSupport::Concern will be no longer included automatically. Please define instance methods directly in Mongoid::Spacial::Document instead. (called from include at /Users/maize/Projects/nearnote-api/app/models/network.rb:4)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (1253.0ms)
  Rendered groups/new.html.erb within layouts/application (1254.8ms)
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2495ms (Views: 2473.0ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 18:14:02 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"UCLUnion", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['groups'].find({"facebook_page.facebook_id"=>34994060032}).sort([[:_id, :asc]])
MONGODB near_io_dev['groups'].update({"_id"=>BSON::ObjectId('5071f754b982541549000004')}, {"$set"=>{"facebook_page"=>{"_id"=>BSON::ObjectId('507228dab982541549000027'), "facebook_id"=>34994060032, "name"=>"UCL Union", "is_published"=>true, "website"=>"http://uclu.org", "username"=>"UCLUnion", "description"=>"Representing the needs and views of UCL students is the primary function of UCLU, with six Full-Time Officers elected annually to perform various roles and carry out the wishes of our members, the students.\n\nThe six officers for 2012-13 are:\nDemocracy & Communications Officer: Sam Gaus\ndco@uclu.org\n\nStudent Activities Officer: Abdul Akbari\nsao@uclu.org\n\nEducation & Campaigns Officer: Edwin Clifford-Coupe\neco@uclu.org\n\nEthics, Environment and Operations Officer: Natasha Gorodnitski\neeoo@uclu.org\n\nWelfare Officer: Candy Ashmore-Harris\nwio@uclu.org\n\nMedical & Postgraduates Officer: Dante Micheaux\nmpso@uclu.org", "about"=>"UCLU is the representative organisation for the students of University College London.", "can_post"=>nil, "talking_about_count"=>259, "category"=>"Non-profit organization", "link"=>"http://www.facebook.com/UCLUnion", "likes"=>6696}}})
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
Redirected to http://localhost:3000/groups/5071f754b982541549000004
Completed 302 Found in 2041ms


Started GET "/groups/5071f754b982541549000004" for 127.0.0.1 at 2012-10-07 18:14:04 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"5071f754b982541549000004"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('5071f754b982541549000004')}).sort([[:_id, :asc]])
MONGODB near_io_dev['system.namespaces'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (862.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2149ms (Views: 1900.5ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 18:14:22 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"33362763765", "facebook_page"=>"", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_group.facebook_id"=>33362763765}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('507228efb98254154900002a')}})
MONGODB near_io_dev['groups'].insert([{"event_ids"=>[], "network_ids"=>[BSON::ObjectId('506c8c45b982540a65000005')], "_id"=>BSON::ObjectId('507228efb98254154900002a'), "facebook_group"=>{"_id"=>BSON::ObjectId('507228eeb982541549000029'), "facebook_id"=>33362763765, "name"=>"UCL Entrepreneurs Society", "description"=>"UCL Entrepreneurs Society\n\nEmail contact@uclentrepreneurs.com to post an event on our wall.\n\nIf you want to make a change and be in control of that change, the only way to do it is through Entrepreneurship\n\nWant to start a business while at UCL or in later life? Interested in meeting & networking with influential people? Or if you would like to socialise with students across London's universities, then get involved with UCL Entrepreneurs this year. We help you to meet like-minded people and progress your career to the next level. Our focus is making entrepreneurship a more attractive career path and helping you get the best advice on business start-ups.\n\nWe offer an exciting array of speaker talks, exclusive networking opportunities and business competitions. Please feel free to join the group to get the latest updates about the society or send us a message if you have a question! \n\nGroupspaces: http://groupspaces.com/uclentrepreneurs/\nJoining the mailing List: http://groupspaces.com/uclentrepreneurs/join/ \nTwitter: http://twitter.com/uclentrepreneur\nWebsite: www.uclentrepreneurs.com", "privacy"=>"OPEN", "icon"=>"http://static.ak.fbcdn.net/rsrc.php/v2/yR/r/r7a4aiYePN8.png", "email"=>"33362763765@groups.facebook.com", "updated_time"=>2012-10-07 00:00:00 UTC}}])
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, {"$addToSet"=>{"group_ids"=>BSON::ObjectId('507228efb98254154900002a')}})
Redirected to http://localhost:3000/groups/507228efb98254154900002a
Completed 302 Found in 964ms


Started GET "/groups/507228efb98254154900002a" for 127.0.0.1 at 2012-10-07 18:14:23 -0700
Processing by GroupsController#show as HTML
  Parameters: {"id"=>"507228efb98254154900002a"}
MONGODB near_io_dev['groups'].find({:_id=>BSON::ObjectId('507228efb98254154900002a')}).sort([[:_id, :asc]])
MONGODB near_io_dev['$cmd'].find({"count"=>"events", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
MONGODB near_io_dev['events'].find({:_id=>{"$in"=>[]}})
  Rendered groups/show.html.erb within layouts/application (1026.5ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3204ms (Views: 2976.2ms)


Started GET "/groups" for 127.0.0.1 at 2012-10-07 18:14:32 -0700
Processing by GroupsController#index as HTML
MONGODB near_io_dev['groups'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}})
  Rendered groups/index.html.erb within layouts/application (1944.9ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3634ms (Views: 3633.5ms)


Started GET "/groups/new" for 127.0.0.1 at 2012-10-07 18:14:39 -0700
Processing by GroupsController#new as HTML
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (1002.4ms)
  Rendered groups/new.html.erb within layouts/application (1004.0ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 2894ms (Views: 2893.9ms)


Started POST "/groups" for 127.0.0.1 at 2012-10-07 18:14:45 -0700
Processing by GroupsController#create as HTML
  Parameters: {"utf8"=>"✓", "authenticity_token"=>"qmBdz++2sroxEnyxErlAxgItqyVlUZLv6FJylHVicUM=", "group"=>{"facebook_group"=>"", "facebook_page"=>"33362763765", "networks"=>"506c8c45b982540a65000005"}, "commit"=>"Create Group"}
MONGODB near_io_dev['groups'].find({"facebook_page.facebook_id"=>33362763765}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>BSON::ObjectId('506c8c45b982540a65000005')}).sort([[:_id, :asc]])
MONGODB near_io_dev['networks'].find({:_id=>{"$in"=>[]}})
MONGODB near_io_dev['networks'].update({:_id=>{"$in"=>[]}}, {"$pull"=>{"group_ids"=>BSON::ObjectId('50722906b98254154900002e')}})
MONGODB near_io_dev['networks'].find({})
MONGODB near_io_dev['$cmd'].find({"count"=>"networks", "query"=>{:_id=>{"$in"=>[BSON::ObjectId('506c8c45b982540a65000005')]}}, "fields"=>nil})
  Rendered groups/_form.html.erb (549.5ms)
  Rendered groups/new.html.erb within layouts/application (552.6ms)
MONGODB near_io_dev['users'].find({:_id=>BSON::ObjectId('5023b1f7b98254fd53000001')}).sort([[:_id, :asc]])
Completed 200 OK in 3584ms (Views: 2391.9ms)
